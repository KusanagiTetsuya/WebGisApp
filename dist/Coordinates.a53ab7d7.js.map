{"version":3,"sources":["../src/events/Event.js","src/ObjectEventType.js","src/Disposable.js","src/array.js","src/functions.js","src/obj.js","../src/events/Target.js","../src/events/EventType.js","src/events.js","src/Observable.js","src/util.js","src/Object.js","src/MapEventType.js","src/has.js","src/dom.js","../src/control/Control.js","../src/pointer/EventType.js","../src/proj/Units.js","../src/proj/Projection.js","src/math.js","../src/proj/epsg3857.js","../src/proj/epsg4326.js","../src/proj/projections.js","../src/proj/transforms.js","../src/extent/Corner.js","../src/extent/Relationship.js","src/AssertionError.js","src/asserts.js","src/extent.js","../src/geom/GeometryType.js","src/sphere.js","src/string.js","src/coordinate.js","src/proj.js","../src/control/MousePosition.js","scripts/Coordinates.js"],"names":["map","$","data","mousePOsition","MousePosition","coordinateFormat","className","target","addControl"],"mappings":";;AmCAA;;AACA;;;ApBEA,AmBCA,A3BJA,ADGA,AkBHA,ACAA,AIAA,AbAA,AKGA,AKAA,AxBHA,AUAA,ADGA,AVHA,A0BGA,AdHA;AKGA,ADHA,AkBGA,A1BAA,AsBHA,IIGMA,GAAG,GAACC,CAAC,CAAC,MAAD,CAAD,CAAUC,IAAV,CAAe,KAAf,CAAV;ApBCA,AmBCA,AlCLA,AMIA,AcDA,ACCA,ACJA,AaKA,AxBDA,AHDA,AEHA,IyBKMC,aAAa,GAAC,IAAIC,sBAAJ,CAAkB;AjBLtC,AKGA,AYGIC,A1BFJ,AIAA,ARJA,E8BMIA,EtBFE,EAAE,GACN,OAAO,EsBCW,EAAC,KtBDnB,KAAqB,WAArB,IAAoC,OsBCF,AtBDS,CsBCxB,CADiB,OtBAgB,CAAC,SAAjB,KAA+B,WAAnE,GACI,SAAS,CAAC,SAAV,CAAoB,WAApB,EADJ,GAEI,EAHN;AECA,AmBCA,A3BFA,ADCA,AkBDA,ACAA,AIAA,AbAA,AIAA,AeGIC,AjCHJ,AUAA,ADCA,AVDA,A0BJA,AnBAA,AJIA,ASKA,AiBNA,EKIIA,SAAS,EAAC,gCAFwB;AlBDtC,AMJA,AYQIC,A1BHJ,AsBDA,EIIIA,MAAM,EAAC;ApBFX,AmBMA,AlCRA,AMEA,AcDA,AEDA,AaCsC,AxBCtC,AGNA,AVAA,A0BIA,ApBAA,CyBCoB,CAApB;AjBAA,AiBMAP,A9BPA,G8BOG,CAACQ,UAAJ,CAAeL,AvBJA,AXAA,akCIf;ApBJA,AbCA,AUAE,ADDF,AVCE,A0BHF,AbHA,ANGA,INGA,UAAA,CKAe,AiBAA,ACAA,ATAA;ATCb,AiBAA,ACAA,ATAA,AMFF,ACFA,ArBGA,AWKO,AHND,EcEJ,ACAA,ATAA,EMFE,ATMS,KYJJ,AHFA,AZAO,EeEL,AZIS,CYLL,AHDH,CEEC,ARAA,CMFb,ATMuB,CWJR,ARAA,CHIU,CAAC,AHNpB,GAAkB,IGMD,CAAW,GWLnB,ARAA,MHKQ,MAA0B,CAAC,CAA3C;AqBbP,AVUE,ACAA,ATAA,ACDF,AKAA,ApBDA,AEFA,ASSA,AiBfA,ApBQE,EcEA,ACAA,ATAA,ECDI,KAAK,GAAG,AfDd,CcEa,CQAC,ACAA,CIAC,AbAA,CQAC,ACAA,CAFD,WTAA,EQAA;AAGb,ACAA,AIAA,AbAA,ACDA,AfDA,ACTF,AWMA,AiBIM,ArBFG,EcGP,ACAA,AIAA,AbAA,KSAK,AIAA,EJAE,AIAA,AEDO,CPCN,ACHK,CTGJ,AdFT,CsBEU,CRAC,GaDE,EEAT,CAAoB,E7BDxB,CsBDa,ERAA,AdCb,C6BCI,EAA4B,KAA5B,EAAmC,aAAnC,EAAgD;APEpD,ACAA,AIAA,AbAA,AdFE,AyBDE,AIEJ,ArBFG,EcGH,ACAA,AIAA,AbAA,IeDM,CNCD,EAAE,AEHO,CFDD,CDIJ,EAAE,AKAA,AbAA,EaAE,AbAA,AWHT,CAAiB,AjBAlB,EqBEe,GAChB,IJHE,EECS,AFDmB,CXDnB,MeIE,EJHX,EAAqC,CIGrB,SAAlB,GAA8B,MAAM,CAAC,OAAP,CAAe,aAAf,CAA9B,GAA8D,KAAK,MADrE;APHa,ACKb,AIAA,AbAA,AOJF,AXIE,AXAA,A0BHA,AbHF,AKPA,AYaE,ArBHI,EeGJ,AIAA,AbAA,AJAA,AXAA,EsBJE,EICE,AIGA,CNAC,AEHA,EFGE,CALM,ETKH,AJAA,AFHA,CmBGC,AEAA,CfAC,AOJA,AXIA,CiBAC,C5BAC,A0BHd,AIGc,ArBHA,CaDC,CtBIC,A0BHA,CJDlB,EbCY,CAAU,IMFP,AJDA,CiBGA,CEGa,CAAC,OAAb,CAAqB,GAArB,CAAd,arBHU,CAAN;AHIJ,AkBAA,AIAA,AbAA,AMFI,ACDN,AtBJe,A0BIX,AvBDE,A0BJN,ACQE,ArBHG,EHGH,AkBAA,AIAA,AbAA,AeAA,GrBLE,CeKE,ElBAE,AkBAA,CIAC,APFO,AlBFA,A2BIP,CxBAC,AoBHA,CEGC,CEAC,C3BJN,CYIQ,AMFR,AKDQ,EXGE,AZJI,CkBEC,CfJN,CwBMI,CFJJ,IEIS,CAAC,CAAb,GAAiB,CfNd,OWGL,CAAmB,GIGY,CAAC,KJHhC,CAAN,AIGQ,GAAuC,OAAjD;ANNa,AIOb,AbAA,ACDA,AKDA,AVEA,AXCF,AEZA,AwBQG,AKTH,A5BQE,A2BIA,ArBPA,EmBOA,AbAA,ACDA,AKDA,KAAK,ELCE,AbHA,A2BIA,CTFC,CLCC,CKDT,COEW,AzBJX,CYIY,CaAC,CbAC,AeAA,GAAG,CdNL,IcML,GFLM,AEMT,GfRS,SeON,GAEH,IAAI,KAAJ,CAAU,IAAI,KAAJ,GAAY,OAAtB,EAA+B,IAA/B,CAAoC,GAApC,IAA2C,YAF/C;A/BDF,AOEE,AsBAA,AbAA,AMFD,AKDA,AvBDA,ASOM,ARNA,A0BKN,ArBLA,EmBGC,AbAA,EhBFF,AaKa,ARNA,MQMM,ARNA,GLCnB,AaKsB,ARLpB,EWEa,AHGS,CAAC,CGHR,EaAE,CxBFV,CwBEY,EhBGC,CAAW,ERLlB,CAAC,KQKM,CRLpB,KwBJa,AhBSgC,ARLpB,CQKqB,CAA1B,IAA+B,EAAE,CAAC,CRLtD,GACI,GQI+C,CAAW,ERJpD,CAAC,IQIwC,ERLnD,GQK0E,ARHtE,CQGuE,CAAtE,QRHS,MAAV,EAAkB,WAAlB,EAA6B;ALFnC,A6BGE,AbTa,ACOb,AKCF,ApBDI,A8BXJ,AxBUA,AJAA,ASOA,AMjBA,AdaQ,A0BGR,ArBLA,EmBEE,IxBAU,GHFH,GGES,GwBAH,EAAE,A3BFb,AGEmB,GHFH,KAAhB,CGEQ,IAAwB,CwBPrB,KxBO2B,KAAK,IAAvC,EAA6C;ALHrD,A6BIE,ANJI,ArBEH,AGEO,EwBAR,ONJc,ClBIA,ELJhB,EuBAM,AlBIc,GkBJC,IMIA,EAAE,AxBAP,CAAc,mBwBRf,yBxBQC,CAAN;ALHR,A6BIA,ANJA,ArBGA,A8BbF,A3BcS,EwBAP,ANJA,MMIM,EAAE,ENJE,GAAG,EAAb;AMLa,ANMd,AXIC,EAAA,SAAS,EAAE,WAbE;ALcb,AUFA,AMDF,ASlBA,AlBeM,ATME,EEAN,AUFA,IZEY,CEAP,EAAE,AUFA,AHJO,EGIL,CZES,GAAG,CEbR,IUCD,CZYe,CAAC,MAAD,CAArB,CSNF,CACJ,SADI,EAEJ,UAFI,EAGJ,cAHI,EAIJ,qBAJI,EAIiB;AdDrB,AOKA,AKDA,AEDA,EPEA,IAAI,EAAE,GPLN,GOVa,MPUb,CAAY,IAAZ,EAAgB;AACd,AOKF,AUJA,AHEA,AVJI,ASOC,ARHC,EEEN,EMCW,ECHP,CPEC,AFFM,EEEJ,AHNO,CSOG,CRHF,CSAf,ATAgB,CQGI,CTPhB,CSOkB,ARHH,CEdN,AMiBU,ARHZ,CDJQ,CCIG,EAAE,GQGJ,ARHO,CQGI,QAAX,ARHgB,CAAC,KQGQ,CAAC,ARHxC,CQGc,CRHyB,CAAC,EQGK,CRHF,CQGI,CAAC,ARHhD,EAA+C,EAAE,CAAjD,EQG6C,ARHO,CQGI,MAAX,KAAsB,CAAC,CAArE;ANAL,AeJI,ApBAJ,ACRI,ACMJ,ASQF,ARJU,AKHV,EHKE,ALJA,EQDE,ILGY,CiBFA,AnBRA,ACMP,GkBEH,ApBAJ,CKIW,AeJO,ApBAlB,CEFA,ACIoB,CEEP,AGLA,EYCT,AjBEmB,CKHP,CYCM,AZDxB,EPPM,CDQJ,ACR2B,CDQ3B,GGEgC,CAAC,CEfpB,AFemB,CAAxB,CHFR,ACRI,EAAiC,CDQrC,KCRI,EAAyC,KDQ7C,SCRI,EAAuD;AIa3D,AeJA,ApBAE,ACRF,A6BPF,AlBgBE,ANDF,AJFC,AeRK,AYcA,ArBJN,EHIE,IJZI,AWSA,CPGC,CLJC,CKIC,AeHL,ApBDK,ACRP,AgBFc,AYcA,E5BZL,GmBSF,ApBDK,ACRZ,AgBFI,CGWI,AHXY,CZJP,GeeN,CAAL,ARAgB,AKXd,EjBUF,AiBVyB,EGYzB,ApBFoB,AYCA,AiBGlB,CZdA,AYc0B,EZdE,AYc5B,ETFG,ASE2B,CTF1B,AHZJ,CYcA,CZd+B,CYcC,CTFxB,CAAC,GRDuB,CAAC,GQC7B,CAAa,ERDrB,EAA6C,oCQCrC,EAAuD,SAAvD,CAAD,CADL,IAEA,IAHF;AtBAE,AOKF,AWHF,AIGC,AI3BD,AxBuBM,ACRJ,AWSE,AVFJ,AeTE,AdWQ,AyBNV,ACSE,ExBAA,EOHE,EXTI,A4BYA,E1BHM,A0BGJ,C/BLD,AmBTA,CZcC,AOHA,CZDC,A6BIE,CxBAD,AwBAE,CjBHD,AKXA,CAAC,AdWM,EFTF,CgBFT,AYcU,CZdD,CjBUZ,ACRe,AESI,A0BGZ,EAAU,CxBnBR,ALeO,AiBVA,CAAC,GjBUjB,AiBVY,AYcL,C/BLT,AcEuB,AKXA,AYcE,CjBHD,ATAd,E0BGD,CAAX,CZdgB,AdWoB,CFTH,AWStB,CKXqB,CLW9B,EXTmC,AgBFrB,CAAT,AdWmC,EcXJ,GAA/B,AdWwC,CcX/C,GdWQ,EAA6C,aFTrD;AHSE,AOIF,AUJA,AKKF,ApBLM,AUGJ,ATXA,AWSC,AKXF,AdWW,A0BGV,ExBAA,AUJA,ALGA,CEJA,GGCI,AdRA,A4BYE,EdJA,AcIE,CnBDD,ATXA,AWSA,EPGE,ALJA,AUGA,APFM,A0BGJ,CdnBC,AdOF,A4BYE,CxBAD,AJZX,AWSW,ETAU,E0BGJ,C1BHP,C0BGC,EAAU,C1BHO,EEjBf,ELgBT,A6BIO,CAAgB,C1BHjB,EAA0B,A0BGzB,CAAX,UjBHO,EAA6B;APIpC,ALJG,AUlBU,ATUb,AWSE,AKVJ,AdUc,EEGZ,EOHE,EXTE,IIYI,AJZA,AWSA,EPGE,AFHM,CFTL,AWSA,IAAI,CTAO,CAAC,EFTJ,CITN,AJSO,MAApB,IWSW,CAAoB,ATAf,CAAsB,GAAtB,CAAJ,EAAgC,ESAJ,IAAI,GAAjC,EAAsC,UAAU,IAAI,GAApD,CAAT;APIF,AULA,AfCC,AUIH,ATZE,AWSC,ATAa,A0BGd,ExBAA,CLTA,AYIO,GPKH,AJZA,C4BYC,CxBAC,COHC,CTAO,CFTL,A4BYA,CAAC,ExBtBG,AJUD,C4BYC,C1BHO,A0BGpB,C1BHqB,C0BGL,C5BZhB,A4BYiB,C1BHG,CAAN,C0BGM,E1BHQ,E0BGJ,CAAC,G1BHS,A0BGd,C1BHe,A0BGN,EAAE,C1BHG,A0BGF,C1BHlB,K0BGM,EAAoB,EAAE,CAAC,MAAvB,CAApB,EAAoD,CAAC,EAArD,EAAyD;AxBCzD,Ac/BF,AnB4BE,AYAE,ANDJ,AKIO,ARHQ,A0BGX,ExBAF,EOHE,ADGS,GNAN,AMAS,CkBAN,CxBAD,COHC,ADGS,AkBAP,ElBAS,CCHR,ADGS,AkBAP,GxBvBA,IMuBI,CCHE,ADGS,AkBAP,CjBHD,AiBGE,EAAE,CAAC,CAAD,CAAF,IAAS,ClBAd,EkBAI,CjBHV,CAAuB,AiBGE,ElBAS,AkBAxB,ClBAyB,AkBA5C,ClBAG,ICHM,CAAT;AdDA,AOKF,AgBNI,AGrBN,AvBeE,A6BPF,AlBgBG,ADIH,ARJa,AyBNN,ACSH,ExBAF,EuBTW,ICSH,C/BLD,AOKA,AgBNO,ApBNP,C4BYG,CxBAD,CgBNL,ApBNM,CoBMQ,AQML,E5BZA,G2BGY,CPGrB,ApBNJ,CIZa,CgBkBa,ApBNP,A2BGS,ACSP,CAAC,EAAE,C/BLtB,A+BKuB,CAAD,CAAF,GDTjB,CCS0B,CRN3B,EAAmC,AQMlB,EAAe,EAAf,CAAnB,MRNE,EAA8C;AvBGhD,AOIF,AgBNA,ApBNE,AESO,AyBLX,EvBQE,IgBNM,IhBME,EAAE,IgBNM,GAAG,GhBnBN,GgBmBY,CAAC,OAAP,EAAnB;AhBOA,AULA,AMDA,Ad5BF,AK8BE,AVHI,ACIG,A0BGL,ExBAF,AULA,IVKI,AgBNE,ATEF,EPIE,AULA,AcKA,C3BPQ,CaEN,AcKA,GdzBI,AbkBR,A2BOO,CxB1BE,COsBb,AiBIE,C3BPgB,CUGH,AVHQ,A2BOR,IRNM,GAAG,WAAW,CAAC,OAAZ,EAAxB;AhBOA,ADnCF,AcAA,AEkCM,AnBXF,AWQA,ANAJ,AJFA,A2BMM,ExBAJ,EJZE,AWQA,GXRG,CIYC,CeDQ,CfCN,AJZA,AWQA,CAAC,CQGL,CAAc,AnBXP,A4BYA,CAAP,EjBJF,CQGE,AnBXY,CIfH,Ce0BW,ARHP,EXRG,GAAG,GAAR,CWQb,CQGE,EAA8B,AnBXH,CAApB,CAAT;AIaF,AUNA,AIxBF,AC6BE,ACNA,ApBLE,AWQD,ATAK,A0BIH,ArBLC,EHKJ,AeDA,EnBXE,EoBKE,CDMC,AnBXA,CmBWC,ACNA,ClBGO,AKDC,CPPN,CIYC,AJZA,CmBWJ,CfCM,AeDX,EjBHM,AKDF,CYIU,AZJO,EaFL,CbEZ,EPPe,AOOK,CaFJ,ApBLA,EIhBP,Ee2Bb,InBX4B,CAAC,CoBKzB,CAAJ,CpBL4B,CoBKK,ApBLd,EAAgB,MAAhB,CAAjB;AYxBJ,ARqCE,AeDD,ACNG,AGpBJ,AxBsBE,AShCF,ANiCO,AKDL,CLnBK,CEwBL,ALLA,EqBFE,AGpBJ,GnB2BO,EAAE,AGLA,GRAP,AQAU,CRAV,AQAW,CaFC,CAAC,GGpBf,ChBsBS,GRAP,CAAA,CQAsB,CaFV,CAAV,CbEuB,CAAC,CaFC,EAAzB,GbEoB,GAAa,CRAnC,GAAA,EQAyC,CAAC,EAAE,ORA5C,CAAoB,CAApB,EQAyC,CAAlC,CAAP;AHxBa,AgBuBZ,AGrBH,AvBgBI,AWOF,ATEF,A0BEI,ArBJH,MIAK,EXPE,A4BWA,EAAE,C5BXC,E4BWE,C5BXC,C4BWV,CjBJF,CXPE,A4BWa,CjBJC,CXPC;A+BZnB,AlCoBI,A0BxBJ,AxBuBA,AO1BA,ANoBM,AWOF,AiBIE,ArBHN,IIDI,KdAK,AEDT,CwBvBA,AZwBU,CAAC,EdAP,A+BIS,CAAC,CAAR,C/BJU,A0BxBhB,CZwBI,CYxBJ,CxBuBA,CFCI,AcAgB,UAAhB;AdEA,AM5BJ,AW0BE,AG3BF,AGyBE,AGtB2B,AxBF7B,ACoBM,A6BPN,AlBcG,AKVI,AYcF,C7B/BL,Ce0BE,AMFA,AGtB2B,CxBF7B,AYWuB,CAiBrB,AKXW,EhBGP,EcME,AETS,ChBGR,CcMC,CSxBmB,APeR,CIOT,AGtBiB,AvBkBjB,CoBIC,EpBJE,GcnBD,AdmBI,CAAZ,IoBIM,AJPS,CIOnB,CAAuB,CGtBI,EAAA,MAAA,CAAA,KHsB3B,IAA0C,WAA1C;AACD,AGtBC,AvBkBG,AUWE,AMdL,AYcC,IlBAU,CVdT,MAGO,WUWoB,GAC7B,OAAO,gBAAP,KAA4B,WAA5B,GAA0C,gBAA1C,GAA6D,CADxD;AE/BP,AmBQA,AjBkBE,AIvBK,AEuBP,AZ1BA,ARqBM,AUaN,AMhBE,IeVI,AbLO,MAAM,GAAG,CaKN,ChCkBD,EgClBI,GbLZ,SaKP;AAEA,AbLA,AlBiBM,AWMJ,AKTA,AYcA,M5BXI,AgBHA,GYcG,C5BXC,AgBHR,AYcA,G5BXW,GAAP;AGnBN,AHoBM,AWKG,AmBkBT,AFZC,M5BXK,KAAK,GAAG,CAAC,GAAT;AACD,AWKD,AKTF,AdUI,AyBLA,ApBKC,IIDH,AJCS,ESVP,GdUU,AyBLA,ChBIN,CAAC,AJCS,GLAd,AKAiB,CLAD,CcVN,IAAd,AWKI,ChBIF,ATCE,AyBLsB,ChBIN,AKTA,ATUf,CLAqB,AyBLtB,EAA0B,ChBI5B,CgBJE,ChBIsB,CgBJQ,UAA9B,EAAwC,QhBI1C;AdGA,AiBFF,AG1BK,AMCL,AfDF,AFCA,ANoBG,AWGD,AclCF,AxBmCM,AeRF,AdUF,A4BgBF,AHrBE,EbIA,EG1BW,ATAb,EmBsBQ,CzBKD,ELCE,AIHO,CgBzBG,CMCjB,ArB0BW,CyBLC,CbID,AG1BS,EpB4BlB,AiBFW,AN1Bf,AmBsBiB,G9BMC,CIHZ,ACEJ,Ce3BK,AhByBoB,EJGvB,AIHE,CCEmB,CDFI,CsBxB3B,AIqByB,CJrBb,ETLA,CZ+BZ,AyBL6B,CJrB7B,CrB0B+B,CqB1Bf,WIqBhB;AIbF,AlCoBG,AoB3BH,AMDE,AfDF,ARuBE,AWID,AVDC,AeRE,AdUA,AyBLF,IIdI,AfSF,EfQE,A0BHE,EJtBN,APiBM,EWKI,CXLD,AdUA,CDFC,CsBzBV,AIsBa,E1BGA,AeRA,COjBb,APiBc,CdUC,CAAC,EqB3BhB,AtByBA,AeRE,CeTmB,GAAG,E7BmBT,CAAb,OyBLqB,EAAE,CAAC,CAAD,CAAZ,CAAb,EIdF;AAEA,AlCoBE,AiBJA,AN3BF,AG6BA,ActCA,AxBqCE,AeTC,AdUA,A4BeH,AHpBE,GXRA,GWQM,GXLC,CRnBT,AmBwBY,GAAG,GnBxBf,EAAA,gBmBwByB,EAAE,CAAC,CAAD,CAAZ,CAAb;AJtBE,AfF6B,AEmC1B,AMfH,AdUH,AyBLC,EnBzB+B,EEmCpB,EiBVL,EJvBE,GfFuB,CeEnB,AfFmB,GeEhB,EIuBE,GAAG,CAAC,EnBzBU,EAAA,AmByBN,EjBUS,CiBVN,EjBW5B,CFpC+B,CAAA,AmByBX,CJvBO,GIuBS,CjBW7B,AiBXP,IJvBe,GAAuB,UbkCtC,GalCe,EbkCc,CalCmB,MAAM,IbkCtD,IACA,ManC8D,CbmCvD,IanC+C,CAAc,GAAd,EAAmB,CAAnB,CAApD,GbmCF,KAA2B,WAD3B,IAEA,IAAI,YAAY,iBAHX,EAG8B;AanCjC,AfFF,ARuBA,AKSI,AoBzCN,AxBqCE,AeRE,AdWJ,A4BiBA,AHvBE,IXLE,EfQE,A0BHE,EJvBE,APkBF,ChBGC,AKSO,EWZL,GhBGG,CuBrBG,AlB8BX,CAAiB,AJJrB,CDLe,A2BEE,CJtBb,EvBoBQ,A2BEQ,CXLD,CXYf,AWZK,ChBGY,CAAC,AKSO,AWZT,GhBGpB,CKSI,EAA+B,QAA/B,EAAyC,CsBPf,EAAE,CAAC,CAAD,CAAF,EtBO1B,CsBPkC,CtBOiB,CsBPf,CAAC,CAAD,CAApB,ItBOhB,AsBP2C,CAA/C,CtBO+D,WkB5B3D,IADA,GAEA,eAFA,GAGA,IAHA,GAIA,eALF;ALIG,AKGH,AvBeH,AKSC,AJHA,ASSF,AMlBM,AWKJ,ITpBW,AKGT,ElBwBE,AsBPE,CAAC,EJjBL,CLHe,AFeP,AWMR,CXNS,COZT,CLHkB,CAAC,Ab2BT,AsBNN,CTrBgB,ASqBf,GTrBa,AKGlB,AlBwBc,AsBNd,CJlBA,AIkBS,CTrBgB,CAAC,EAAR,AKGlB,CAAA,CLH8B,Cb2BR,Ea3BJ,AKGlB,ELHmC,AKG7B,AIkBN,CtBM2B,Ca3BT,CAAf,CSqBqB,GJlBxB,AlBwBF,CsBN8B,CtBMO,AsBNN,GJlBf,AIkBU,CAAS,GJlBjC,QIkBwB,CAAxB,GACA,IAAI,CAAC,GAAL,CAAS,WAAT,IACE,IAAI,CAAC,GAAL,CAAS,WAAT,CADF,GAEE,IAAI,CAAC,GAAL,CAAS,IAAT,CAFF,GAGE,IAAI,CAAC,GAAL,CAAS,IAAT,CALJ;AbIA,AItBF,AKGI,AjBLJ,ANoBA,AKQI,AWbY,Ac4BhB,AHjBE,EbFA,ETIE,ISJI,CaEC,CbFC,ETIE,CsBFC,EtBEE,IsBFN,GAAa,CtBEC,CAAC,EsBFE,CAAC,CtBEZ,CAAc,GsBFP,CAAW,ItBElB,AsBFsB,CtBEjC,AsBFkC,IAAL,CAAU,CAAV,CAAX,EAAyB,IAAI,CAAC,IAAL,CAAU,IAAI,CAAd,CAAzB,CAApB;AbrCY,AGUP,AGyBD,AfKH,AJJD,AeVmC,AWYpC,CbtCD,GGUa,EhB0BP,AeV+B,GISrB,CJToB,CAAO,EChBrB,ChB0BpB,AeVkC,CIS9B,AJTyC,CChBtB,AGyBF,AJTa,CAA9B,GChBuB,CAAC,CGyBxB,CHzBmB,CGyBM,EHzBI,MAA5B,GGyBD,EAAoC;ARvB1C,AG8BA,ADJA,AG1BA,AGwBE,AK7CF,AxB+CE,AeXI,AcgCN,AHnBA,IZEA,EKNQ,AnBEF,OeXO,CDeb,AdJE,AeXY,CAAC,CISG,EJTA,CISG,GJTC,CAAT,EISc,CAAC,CJTD,CAArB,KISe,EAAnB;AvBIA,AkBEF,AKLE,AfIA,AJDA,AeZG,EnBYH,GmBfE,CIYI,AfIF,GJDG,EJAP,CAAA,EQCA,EAAc,KRDd,AuBHqB,AnBGd,CJAP,EuBHwB,WAAW,CvBGnC,AuBHoC,GvBGpC,IuBHwB,EAAxB,MvBGA;AACE,AkBCJ,AKJE,AdvBF,AD2BI,AJDA,AeZD,AcmCH,MV1BQ,EfIE,AJDA,CJAD,GkBCT,GKJiB,CnBGC,EmBHE,CnBGC,KAAK,CJAtB,AIAuB,CICD,ERDE,AuBHE,CAAC,AfIF,GRDzB,EIAiB,CAAgB,EICjC,EeJ0B,CAAV,AnBGC,CmBHsB,AnBGA,IAAtB,CAA2B,SAA3B,CmBHD,AnBGhB,CmBHF;AWdF,AlCkBG,AkBCD,AKJA,AZ7BA,AG8BI,ADQC,GbRL,CaQW,KUTJ,ATCO,EH9Bd,KEsCuB,GUTN,ATCb,ADSJ,CUVkB,ATCO,EH9BzB,CAAY,GEuCL,CFvCP,AG8BI,EH9Bc,AG8Bc,CSDf,CAAV,AVUP,CUV8B,AZ7B9B,EAAuB,EEuCN,MFvCjB,EAA+B,GY6BxB,AVUP,CUVA,GVUgC,KAAK,CAAC,SAAN,CAAgB,MAD3C;AbJL,AqB3BK,AVPL,AqBoBI,AlBWJ,ANEE,AoB7CJ,AxB4CI,ASSJ,AMrBE,AcmCF,IZhDa,Ab0BT,EMFE,EH/BJ,APgCM,C4BZQ,A5BYP,AeZA,ELWE,CkBXL,AxBaM,CGjCV,AqBoBkB,AbAlB,CLWY,CNEC,AJDP,CO/BJ,GUMwB,AjByBT,EUDE,COxBW,AVN5B,AG8BkB,CH9BlB,AqBmBE,EAA0B,CXbI,CAAC,AVNjC,AHgCW,CGhCX,AP+BwB,CiBzBI,CWa1B,EXboC,AVNtC,AqBmBiC,ClBWnC,CH9BQ,EP+BF,EiBzBuB,AVN3B,EP+BoC,CiBzBY,AjByBX,EO/B1B,CUMR,GVPL,aPgCmD,QAAZ,EAAsB,QAAtB,CAArC,EAAsE;AExB1E,AWwBA,AIvBA,AEqBE,AZ3BE,AqBkBF,AlBWA,ANEI,AJDA,AeZL,CAfmB,CaelB,CbfK,CbEP,AWwBM,EMFA,ATEE,ANEF,AJDA,IEzBN,CQwBa,CkBXD,AxBaA,AJDA,C4BZC,AxBaA,CSFG,AeXJ,AlBWI,CkBXd,A5BYa,EaDI,EeXA,A5BYb,C4BZc,ITSN,CSTW,CAAC,CAAD,CAAvB,ElBW8B,CAAC,CNE3B,CAA2B,CeJT,CAAC,EfInB,CMF0B,CAA9B,ANEqC,MeJf,CAAlB,CAAJ,AfII,EeJiC;AjBtBvC,AY4BE,ADHA,AG3BK,AGyBH,ASTF,AlBWA,ANEI,AJDA,AeXN,AdWO,A4BsBP,EDlCE,AlBWA,EM3BW,Af4BA,EGCP,AJDA,CUDC,GGAG,AG3BS,CF8BjB,AKLS,ATEA,CkBXC,CZhBU,AYgBT,A3BYS,Ce5BC,AYgBX,A5BYE,CaDC,AG3BS,AYgBtB,CfWc,AZEd,CDDe,E4BZE,AlBWA,CkBXC,AlBWA,CIGlB,AKLmB,AnBGf,CcEQ,ADJK,AMDG,ClBIb,Ce7Ba,AZ6BA,CwBbG,AlBWA,ANEF,CY7BY,AYgBT,AlBWA,CM3BU,AYgBX,CAAvB,CdcA,AbDa,CGAT,AHAU,CaCK,AVDQ,CeJR,CAAjB,EfIE,CY7BgB,AN2BH,ATEjB,CGAiC,CY7BY,AN2BT,EAAnB,CAAR,ATEgB,GSFiB,ENEtC,CY7BgB,EAAoC,Ef6BxD,CSFkD,CAAC,CTG/C,Ie9BgB,AN2BoC,CM3BnD,AN2BoD,CTG/C,CAAC,MADX,GSFkD,ATI9C,ESJkE,EAApB,CAAlD,KTIc,MAAV,EAAgB;AC7BtB,AY6BI,ADHF,AG1BF,AGwBG,AGlBC,AjBJJ,ANkBM,A6BLJ,AlBYA,ANCG,AJDC,ACGE,IqBxBJ,ClBmBA,CJEE,ACGQ,GqBxBN,AvBcQ,A6BLP,AlBYA,CR3BT,AW0BU,ASpBD,ErBwBW,EqBxBhB,AZqBF,AVAY,CaDC,AZIQ,CC9BvB,AW0BgB,CSpBA,AtBqBC,ACGT,CC9BR,C0BeE,CfSiB,CSlBf,ItBqBE,SDPA,CAAoC,CAApC,EAAuC,CAAvC,EAAwC;AGpBzB,AW2BnB,ASnBE,AvBaF,A6BLD,AlBYA,ANCE,AJDG,A6BqBN,AHrBA,ExB5BqB,IF4Bf,GDPG,A2BOA,CbDC,AdNA,CGrBW,CAAA,CHqBR,CAAJ,CcMM,CAAC,AbCA,CDPC,CGrBI,AHqBZ,CCOU,CE5BE,CHqBA,ACOA,CaJF,AdHG,ACOA,GDPG,CGrBJ,AHqBA,A2BOrB,CxB5BqB,AF4BF,A0BAQ,C1BAC,CDPC,CAAC,CAAT,CCOF,EDPe,ACOA,CDPhC,G2BOF,EAAwC,G1BArB,CAAb,E0BAN,EAA8C;AxB3B5C,AW2BA,AMHA,ApBHD,A6BJD,AlBYA,AVDK,ACEG,AyBFN,MAAI,CzBEO,EkBNJ,CNGC,CZGS,CyBFP,GbDG,AaCA,CbDC,AaCd,EPJA,ClBMM,IYPW,AZOY,MAAvB,EAA+B;ALDrC,AiBDA,AMHD,ApBFD,AKME,AoB5CF,AfkDO,ARJG,ELFR,EaMW,ARJH,EGFF,ISDE,AZGM,CLFd,AKEe,CLFf,GiBDa,ATCE,AHEP,CYHM,AZGM,EGFF,GRAlB,CAAA,AKE0B,CAAC,IQIO,GAAI,CRJZ,CAAlB,KLFR,GAAA,EaMsC,UbNtC;AACE,AkBEA,ADTe,AMInB,AfGI,AJDA,ASOF,ARJO,AyBHP,CbNF,GTOI,EKME,CiBPC,E9BCE,AkBEA,CVFC,CJDC,A0BAA,CtBCC,AsBDA,CjBOC,CKJT,CYHW,CjBOC,AiBPT,CZGU,CVHG,AsBAF,EAAE,C1BAhB,ASOF,EiBPqB,CZGC,CAAC,ElBFrB,EkBEA,ClBF0B,IAA1B,A8BD8B,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAAE,GAAG,CAAlD,EAAqD,EAAE,CAAvD,EAA0D;A9BEzD,AkBGC,ADHJ,ASrBI,AfXA,AHgCA,AJDD,A0BAC,G9BDF,AIRA,CsBXE,AfXA,AHgCA,AsBDA,ItBCI,CkBrBA,AfXA,CeWC,AfXA,AHgCC,AsBDA,GnB/BN,CeWA,AlBmBgB,AsBCN,EnB/BC,CeWC,EfXZ,MmB+BqB,CAAC,OJpBtB,CAxBc,CA0Bd,EIkBiC,CAAC,CAAD,CAAZ,EAAiB,WAAW,CAAC,CAAC,GAAG,CAAL,CAA5B,EAAqC,MAArC,CAArB;AV3BG,ATFH,AH+BA,AJDH,ASMC,ARJM,AyBFL,IV5BU,AZ6BT,EKKE,GRJS,GGDH,EAAE,CHCN,Ce9BiB,GAAG,CAAC,CAAC,GAAF,EAAO,CAAC,EAAR,EAAY,GAAZ,EAAiB,EAAjB,CAArB;ApB6BP,AM7BE,AcEF,AMQI,AlBgBgB,AJIpB,ASKI,ARJG,CATA,EGIL,CkBhBE,IbyBM,CbNV,A0BnBQ,CAAC,CpBVP,IOmCe,EPnCf,AoBUE,C1BmBJ,AM7Bc,AOmCM,EazBD,IbyBO,CAAC,EazBvB,CpBVF,EAAsB,SOmCJ,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AbpDzD,AMiBE,AE+BA,AKKI,ARHN,AyBJE,C9B9CF,CQgDE,CRhDF,GaqDM,EPpCJ,AE+BM,CAAC,AKKA,AiBPA,EjBOE,EPpCT,EwB6BA,CxB5BE,MAAA,CAAA,AOmCO,ELLT,CAAwB,CF9BtB,CAAA,EE8BF,EF9BE,AE8B4B,KF9BrB,GE8BT,CF/BA;AN+BF,AM5BI,AeEJ,AKMG,AlBqBD,AKKM,AoBpER,AH6DC,ITzBD,IRgCQ,CLLC,MKKM,GLLb,AKKgB,IQhClB,ARgCQ;AILF,AI3BN,Ab4BC,AoB5CK,AfiDC,AiBNP,SbAgB,AW3CA,QX2CV,CAAmB,IAAnB,CW3CA,CX2CuB,AW3CE,WAAzB,EAAoC;AX4CxC,AI5BF,AKOA,AjBHA,ANiBM,A6BLA,AlBYA,ANEN,AoB7CE,Af6CuD,IJ1BzD,CI0BoB,Ce7CZ,Af6CJ,GIFK,ASrBT,AvBcgB,A6BLA,AlBYA,CO5BhB,EOfc,EnBmBd,CmBnBiB,CPejB,ClBqBM,CkBrBN,AlBqByB,CcON,CAAC,AHAd,CXPA,AWOsB,EYrB5B,AvBc8B,CcOX,AeZb,CfYJ,AeZ8B,C7BK1B,AyBpCsB,EzBoCK,AWO3B,Ac3CJ,Ed2CiC,KkBZ7B,EAAsC,MAAtC,EAA4C;AfajD,AI7BgC,AEyB3B,AGnDN,AjB8BA,ANkBE,A6BLA,AlBYA,ADOE,AMrBG,COzCP,CL0BiC,AK1BJ,Eb8DzB,AMrBS,EaEL,AlBYF,CYvDN,AM2CS,CN3CT,APyCiB,CIUD,ApBHP,C6BLG,AnBmBF,CQpCuB,ARoCtB,AMrBU,CEfY,AEyB3B,ApBHM,AWOA,CSJQ,ApBHP,EWOE,CkBZG,CAAC,G7BKV,CAAY,CWOC,CSJhB,ATIiB,AKdF,ChBOZ,CoBGuB,CSRpB,CnBmBR,CmBnBF,AnBmB0B,CVdC,CkBtBI,AlBsB/B,CUcE,CQpC6B,CRoCA,ECP/B,EDOE,CQpC6B,CAAA,ARoCM,CUXjC,EAAyC,IVW3C;AKHA,ADFJ,AI9BE,AEyBA,AZ3BE,AFKJ,ANmBC,A6BLC,AlBYA,Ac5CA,AfmDE,AMrBF,AchDF,ItB+BI,AEsCA,EUXE,ASRE,AlBYA,Cc5CD,EV+CE,APlCD,CAAC,AFKT,AIiCU,CCPG,Ac5CF,AfmDA,CmBnBG,AJhCF,Ed4CI,CIGZ,AKPF,ASRe,AJhCF,CnBkBf,AmBlBO,EjBaH,AFKJ,AmBlBkB,EAAE,CjBaA,AqBmBG,CAAC,CJhCD,MjBanB,CG+B4B,ADO5B,CmBnBa,AlBYgB,ADOF,EmBnB7B,CJhCgC,AfmD9B,CenD+B,CfmDC,ECPJ,CAA9B,CDOE,CenDF,CfmDwC,CenDC,CAAC,GAAG,EAA7C,AfmDE,EenD+C,EAAE,CAAnD,EAAsD;A5B2ClD,AkBIY,AE/BX,AXEkB,ANqBzB,A6BNE,AlBYA,Ac5CE,AxB2CE,ASQH,AMrBD,EVbuB,AK2BvB,CDFA,CO3BW,AQfT,AfmDA,EmBnBI,EAAE,AlBYF,CdFQ,AICA,EK1BS,AuBeZ,AnBmBF,CJlCc,AK2Bb,EM7BW,CMOR,Cb6BX,COpCsB,AYiBP,CAAC,A5BWd,ASQY,CmBnBC,A5BWO,ASStB,CmBpBF,AlBYkB,Ac5CA,Cd4CC,Ac5CA,CnBiBI,CWFO,CpB2B1B,ASzBmB,CTyBO,AIC1B,CgB5B6B,AN6BT,CAAC,Ac5CP,AxB2CY,CJD1B,C4B1CuB,C5B0CM,AoB3BI,AXEd,CWFe,AXEf,GWFU,CAAS,CN6BxB,EAAkB,CM7BU,CAAC,AN6B7B,Ac5CoB,Cd4C5B,Ac5C6B,CAAD,CReI,AQfxB,CReiC,AN6BT,Ac5CxC,IReqD,CAAC,EAAL,CN6BD,CAAC,CM7BU,CAAnB,CAAT,CAA5B,CN6BmD,CAAC,YAAP,EAAqB,EAArB,CAAlD;AoBfF,AlCcE,AM5BE,AY+B2D,AE7B/D,AGuBE,AZ3BC,AqBoBD,AlBaA,Ac7CC,AxB2CD,ASSC,AMtBD,EnBYA,EM5BE,AY+B2D,ClBH1D,CAAC,AuBHA,ASPE,AbFF,EaEI,C1BlBF,AQ+BC,CR/BA,AagBP,CDeoE,AcbzD,A5BWF,CcE4D,GJArE,CSNc,CLMZ,Acbe,CAAC,CAAD,CTOC,ASPlB,ChCUA,CM5BE,EF6BF,CE7BsB,EF6BA,GmBJlB,IAA4B,CjBzB9B,ciByB6C,IAAI,UAAU,CAAC,UAAD,CAA7D,EAA2E;AvBI5E,AM3BG,AY+BA,AKPA,AdvBF,AuBgBA,AlBaD,AVFG,ACCE,IkBLF,ESPI,EAAE,A5BWF,CCCQ,EI5Bd,AuBgBW,ETOA,AnBIT,GmBJY,AlBKV,CAAkB,II5BtB,AuBgBqB,CAAC,CAAD,A3BYjB,CI5BJ,AuBgBA,C3BY4B,CkBLJ,CAAC,UAAD,CAAV,CAAuB,eAAvB,CAAZ;ARnBJ,AfwBA,AuBJG,AZ5BH,AFIE,AuBiBA,AlBcF,Ac/CE,AfoDA,AMtBA,AdeA,IUzBF,EiBaQ,AbHF,AdeA,EI7BJ,AuBiBQ,CrBrBV,AiBZS,AfoDA,EEhCT,AiBaa,EvBjBX,CJ6BA,CuB7CA,CnBiBE,AImCF,AMtBc,IRlBhB,AQkBE,CaGqB,CvBhBnB,AuBgBoB,AbHF,CVblB,AuBgBmB,CAArB,GvBhBE,CAAA,IAAA,KAAO,IADT;AMIF,AJhCA,AqB+CE,AJlCD,AxB2CG,ASSH,AMtBG,CR3CJ,AEkDuC,CFlDN,CEkD1B,GmBHD,EAAE,A5BSA,G4BTG,EAAE,GrB/Cb,AqB+CgB,CrB/ChB,CqB+CE;AjBfF,AMJE,AEyBA,AdtBE,AuBiBF,AJjCF,AxB0CM,AebF,AdcF,II3BE,AUaA,EaII,A5BSF,CCCC,C2BVG,AbJF,CISC,AdtBD,CMCR,ANDS,CYHP,AWoBW,A5BSF,AebA,CVbP,CuBiBW,C5BSD,CebC,Adcb,CU1BF,AiBgBkB,AbJF,EJZhB,AQqBE,ASLA,C3BUiB,CDDC,AebhB,EfaE,GCCJ,EAAyB,EgB9BzB,CAAY,IAAZ,EAAkB,mBAAlB,EAAqC;ANIjB,AQsBrB,AdtBK,AL0BD,AebF,AdcC,EU3BkB,CIUpB,EfcE,CAEE,GebG,EJba,AMHlB,AhB8BO,CU3BW,CX0BT,GAAP,ACCF,CgB9BA,CAAA,AjB6Bc,CW1BI,EAAA,CMHlB,CAAA,INGkB,AMHlB,CNGkB,CMHZ;ANIR,ATFE,AW6BG,AI9BD,AZGE,AuBgBN,A5BUI,AebF,AdcD,IC7BC,AW6BS,AR3BL,EYHF,AWmBA,EAAE,C1BlBA,AGEI,CHFH,AeDC,AZGG,EYHD,CWmBC,A5BUA,C4BVP,EXpBI,EWoBQ,CfWU,CR7BxB,AuBkBgB,A5BUA,CAAC,CaCU,EAAxB,CeXkB,C1BlBrB,AW8BJ,AeZE,C5BUW,C4BVe,A5BUA,CE5BA,EF4Bf,CAAP,CE5BF;AN4BE,AM1BF,AcFJ,ACAM,AVLN,AFUI,AuBcA,A5BUC,AebD,IChBJ,AXKI,AuBcA,AbHA,EEhBE,AWmBA,EbHE,CnBYQ,ASvBR,AuBcC,CvBdA,AuBcL,CXnBO,AFgBA,EEhBE,CZKT,OUWiB,CChBrB,ADgBW,CnBYL,CAAyB,AmBZT,GnBYhB,CqB5Ba,CrB4Be,MqB9BxB;ArB+BR,AoB7BF,ACCM,AZKA,AuBcH,AlBYG,AKfA,AdaJ,ELDA,GAAG,CAAC,AqB5BA,GP+BU,ATFP,CAAC,EgB7BE,CFgBC,CEhBC,GFgBG,CAAC,AdahB,ELDA,AqB/BQ,APkCJ,CAAsB,AKff,CAAS,CAAT,IAAc,CLerB,EAA+B,CKfN,CAAC,KLe1B,AKfA,ELesC;AdF3C,AkBIG,ADHJ,AG/BA,ACEM,AZKE,AK0BN,AVHE,AeZC,AdaJ,AyBAK,IrBxBE,CUSJ,CEdE,AP+BE,EVHA,CcIC,AT3BG,AqBwBI,CV/BhB,AXOa,EK0BC,CVHD,EaCE,AHEE,CICb,ADHY,AG/BhB,EAAA,AU+BM,CZGa,AYHO,EbAL,AI7BA,CJ6BC,AR1BlB,AK4BoB,CO/BD,AP+BE,EVHA,CcIC,CAAC,AYHrB,EbAS,AaAqB,CbApC,EbDI,CcIe,ADHc,AHE/B,CVHgC,IcII,EYHhC,ETjCI,ASiCqC,EbAH,GCGzB,CDH6B,ECGE,EDHE,CAAC,EAApB,CAAjC,CCGyD,CAAC,MAAvC,GAAgD,IAA/D;AAEA,ADJJ,AGhCiC,ACG3B,AZOF,AuBWF,A5BUI,AeZH,AWaD,EVhC+B,EXU7B,EYPE,AWkBE,AFWA,CEXC,EvBXD,CAAC,AuBWG,CZrBqB,CAAA,ACGrB,AZOR,CLqBS,A0BCE,CT7BD,AWkBE,CfWD,AeXE,CfWD,AaAE,ETlCR,AjBiCJ,C4BVM,CAAU,CfWD,CAAC,AeXE,GAAG,EAAL,AFWO,EbAd,CAAf,AGhCiC,AYqBD,CFWC,CVhCA,AYqBC,CfWA,AaAhC,EEXmC,EfWC,AeX1B,CZrBqB,AYqB/B,CZrB+B,EHgCS,CAAC,EAAT,GAAc,OAAf,GAA0B,GAA3D;AF3BE,AE4BF,AGhCE,ACGI,AZMQ,AuBaZ,AlBWA,AVFG,A0BCH,MT7BI,AWmBE,AlBWF,AgBDE,CEVC,GAAG,CjBlBV,CiBkBY,AlBWZ,AgBDY,EhBCA,CdFC,AiBCA,AeVG,AFUD,CbAD,AeVG,EjBlBjB,CAAY,AMDK,AWmBG,EfUD,AI7BA,AWmBJ,CfUK,AaAE,CAAC,CEVG,CAA1B,CjBlBA,AE4Ba,CAAf,CF5BqB,Ce4BJ,CbAa,GaAK,GbAnC,AInCU,WSmCR;Af5BA,ATCE,AW4BJ,AI7BM,AZKoD,AuBcxD,AlBWE,AKfF,AWcA,IxB5BE,AGIsD,AKyBtD,EO9BE,AWmBE,AFUA,CEVC,CjBnBP,CTCM,AGIsD,AUUrD,CbdA,AGIsD,AuBcnD,AlBWF,CAAC,CkBXG,CjBnBZ,AIeA,EFca,AeVG,CjBlBd,AE4BY,AeVG,AFUD,CT7BD,EAAE,AWmBG,AFUD,CrBxBjB,CQwBiB,AeVJ,CjBlBb,ATAA,AW4BkB,CF5BlB,AD6BA,CkBXwB,AlBWJ,CR7BA,A0BkBtB,CFU0B,Cf5BxB,Ae4ByB,Cf5BzB,AE4BW,CX5BX,AW4BJ,EHCI,CC7BA,AE4B4B,CAAhC,AHCiC,IC7BtB,Ae4BU,GhBCjB,CC9BF,Ae6ByC,WAAzC;AIdF,A5BZI,AW2BJ,AIrCU,AZcN,ANmBJ,A6BLE,AlBUC,Ac7CH,AxB0CI,AeZH,AWcC,CX5BkB,EAAb,CeaP,CbtBI,CSqCI,GETC,AJnCA,CPeH,AWoBI,AFSE,CETH,A5BOE,E4BPE,AFSE,CETN,CfSM,AeTb,CfSc,CiBfhB,C9BakB,CAAC,EaEE,AaAE,CbAD,AaAE,I1BFb,CwB1CX,AxB0C2B,CaEZ,AW5Ca,CX4C5B,AaAe,CF5Cf,CE4CE,CbA8B,AW5CA,AxB0CrB,CAAP,CwB1CJ,EAAoC,GX4CG,IAAvC,GW5CA,EAA8C;AbiB1C,AmBYJ,AbbG,AVLH,AqByBC,AlBUA,Ac7CC,AxB0CC,AeXH,MS/BQ,EbgBE,EahBE,GAAG,EbgBE,AE6BF,EW7CI,CbgBC,AahBA,GAAL,CAAS,GbgBG,CAAC,CahBb,CAAe,IAAf,CbgBX,CahBgC,EAArB,CAAb;AM4BF,AFSA,AlBUA,Ac9CE,AE2CA,MF3CM,AE2CF,IIhBN,AN3BY,AE2CF,GF3CK,EE2CA,CIhBf,CN3BmB,CM2BnB,AN3BoB,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,EAArB,CAAb,AE2C0B,mBAA1B,EAA+C;Af3B7C,AmBWwB,AdhB1B,ACIF,AOdE,AxByCA,A0BEE,EIjBwB,EJiBxB,EF3CI,EbeA,CMDR,AjB2BS,CwBzCG,CM0BgB,AdhB1B,CcgB0B,AJiBhB,CF3CG,EbeA,Ae4BA,EF3CI,CAAC,CbeD,CAAC,CafL,CAAS,AxByCF,C0BEC,C1BFrB,A0BEsB,CIjBI,EnBXD,AmBWC,AbZ5B,AOde,Cbea,AafE,CRU5B,AUiCa,CVjCD,EQVC,AE2CiB,CIjBJ,CnBXpB,AmBWoB,AdhB1B,AQVkC,ERUlB,AQVH,CAAb,CbeoC,CAAC,Ee4BxB,CAA2B,If5BI,CAAC,KAAR,Ae4BxB,Cf5BsC,Ce4BC,WAAvC,Cf5BX,Ae4BA,Ef5BgE;AAC9D,AmBWJ,Ab7BF,AOGE,AxByCD,A0BEE,CT9CH,CAAiC,INkB3B,AafE,IAAI,CRUR,ELKS,AafE,CbeD,GKLV,AQVe,CRUf,AQVgB,Cbed,CAAc,CMlBpB,AOGe,CRUX,ACbJ,AOGwB,CRUpB,IAAA,AQVW,CAAe,CRUpB,GQVK,CbeT,Caf8B,EbeA,AafrB,CAAb,KbeI;AACD,ATCD,AY+BA,AErCE,ACIN,AZMI,AD0BE,AoB9CJ,ItBgBE,AGIA,EWVE,GdME,AY+BC,AT3BD,AD0BQ,AoB9CP,CtBgBA,AcNC,AXUD,EWVG,IADF,GXWN,AD0BE,CF9BF,AE8BuB,CUCvB,CT3BiB,CHJC,AGIlB,AmBpBmB,CVgDjB,AUhDkB,EpB8ClB,CF9BF,CE8B+B,AoB9CZ,EAAO,CVgDjB,CAAC,AVFR,EAAmC,AoB9ClB,EAAa,IAAb,EpB8CjB,AoB9CoC,CVgDpC,CVF6C,EoB9C5B,EVgDO,AUhDkB,IpB8C1C,EAAqD,GUErD,CUhDiB,CAArB,CVgDwC,OAAO,CAAC,WAA5C,GAA0D,IAD5D;AH9BA,AGiCA,AEvCE,AZoCJ,AoB9CD,AE0CC,MVhCI,AUgCA,GtBIG,EYpCE,CUgCC,CVhCC,EZoCE,AsBJA,CtBIC,AsBJd,MtBIa,EAAS,IYpCL,AZoCJ,EAAe,IYtCpB,IZsCK,EAAyB,QAAzB,EAAmC,IAAnC,CAAb;AF9BC,AcLG,AXSH,AD2BF,AoB7CD,AEyCE,MVhCI,AUgCA,MVhCM,EAAE,GUgCZ,EAAiB,CVnCT,KUmCR,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC;AxBzBA,AcNI,AXUJ,AKwBI,ANGN,MYrCM,GNkCU,GMlCJ,EAAE,IAJJ,CNsCJ,CAAqB,IAArB,EAAyB;AoBnB7B,AddI,ANkCJ,AgBHA,MV/BI,GNkCG,CgBHC,CIjBR,EpBoBW,CgBHX,GV/Be,ANkCA,EMlCE,ENkCE,CAAC,EoBpBpB,CAAY,MdnBJ,CNuCD,GAA0B,CoBpBjC,EAAuB,CpBoBc,CAAC,UAAL,CAAgB,WAAhB,CAA4B,IAA5B,CAA1B,GAA8D,IAArE;AoBpBA,AdbI,ANkCL,AgBHG,MV/BE,EcaJ,CJkBO,IIlBP,GAAA,IAAA,IdbsB,EAAE,KU+BJ,KV/Bc,AU+BhC,UV/BsB,EAAsB,KAAtB,EAA2B;AFuCjD,AEtCI,AjB4BF,AWON,AgBJI,SZOK,AfVO,A2BGP,MV/BM,UFsCX,AEtCqB,CjB4BnB,CAA4B,CeW5B,AEvCsB,EjB4BtB,C2BGgB,C3BHiB,GeW1B,CAAC,EfXR,EAAyC,E2BG3C,EV/B6B,KAAK,AjB4BhC,CiB5BiC,CFuCjC,AEvCgC,AjB4BkB,CiB5BvB,GAAW,CFuCV,KEvCN,CAApB,GFuCF,GAAwC,OAAO,CAAC,eAAhD,GAAkE,KADpE;AHjCA,AmBQA,AhB4BA,AExCG,AjB4BL,A2BEiC,If1B/B,EZwBI,CAAC,C+BhBC,CnBRF,CAAC,AZwBG,GAAG,CAAC,C+BhBC,EnBRb,CmBQgB,EnBRD,AZwBjB,OYxBwB,EmBQK,CnBRF,EmBQK,KnBRR,GAAa,GmBQR,CnBR3B,EmBQ4C,EAA5C;AnBNA,AmBQA,AdtBM,ACWH,AS4BD,IT5BO,CDXT,GcsBM,EdbJ,KcaW,AbXO,GaWJ,AbXO,CACzB,IAAI,GaUsB,CAAC,aAAT,CAAuB,AbVzC,CAAuB,IaUL,CAAhB,GbVF,CADyB,EAEzB,IAAI,kBAAJ,CAAuB,WAAvB,EAAoC,KAApC,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,+BAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,0BAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,8CAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,4CAAvB,EAAqE,KAArE,CAPyB,CAApB;AaYH,A5BTF,AcJC,AXQD,ANmBA,A2BGG,ExB1BH,AGIA,EyBKE,E/BcE,EGvBJ,CAAA,AHuBO,CAAC,C+BdC,A/BcF,C+BdG,AzBLV,ANmBI,CMnBJ,GNmBc,EGvBd,CAAA,E4BSE,CzBLF,ANmBA,CMnBA,CyBMI,A/BakB,MMnBtB,CyBMW,CAAC,CzBNZ,EHJA,GAAA,G4BUI,IzBNJ,CyBM0B,E5BVT,IAAjB,EAAuB,C4BUnB,GAAkC,I5BVtC,EAA+B,C4BUc,CAAC,SAA1C,GAAsD,mBADxD;AAGA,A5BXA,AGIA,ANmBA,I+BZA,EzBPE,EHJE,C4BWJ,A5BXK,EGIE,ANmBA,C+BZP,A/BYA,CGvBI,IAAS,C4BWb,A5BXc,C4BWd,CzBPA,GyBOA,CAAA,E5BXA,E4BWA,A5BXwB,E4BWlB;AACJ,A5BXA,AcLN,AXSI,ANmBD,A6BHG,AlBSA,AKhBA,AWYF,G3BJF,G+BVI,GdhBN,AXSS,ANmBA,A6BHO,AlBSA,AKhBA,AWYP,IIdI,A/BYA,E+BZE,I/BYI,G+BbT,AzBNN,CAAmB,ANmBA,AWMjB,CAAyB,CkBTzB,C7BGoB,A6BHO,CZzBjC,AjB4B2B,CAAC,AWMtB,EAA6B,CXNJ,AgBVzB,AWYgB,C3BFI,AgBVa,ChBU9B,AgBVH,EhBU6B,AgBVO,CaOpC,AbPA,EaOuC,AbPA,EAAvC,EVT2B,AUSgB,AWY7C,EXZE,CaOA,CbP+C,CaOD,CvBhBhD,AUSE,EAAmD,EAAnD,EAAqD;AeDrD,A5BXD,AYmCD,AEzDJ,AX0BG,ANmBC,A6BHF,AlBSA,Ac5CI,AT4BJ,AWYE,CV/CJ,CAAiC,CXuB/B,GyBUI,AFSE,AbPA,EaOE,AbPA,CDsBD,AJNA,Ac5CO,AEwCP,E3BFE,A6BHE,AbPA,CeFD,A/BYA,CWMC,AKhBE,CeFD,ApBkBA,CXNC,AyBtCT,CVkDF,AfZA,AyBtCmB,AT4BL,EAAhB,CDsBiB,EgBxBE,AdjCrB,AY0CuB,CETD,AdjCtB,AY0CwB,AJnClB,CImCiB,AlBSrB,CkBTA,AJnC6B,Cd4CN,CIMC,CAAC,CgB1BjB,CNxBJ,EAAgC,AEwChB,EZUH,KAAmB,GUlDhC,CEwCF,CFxC4C,IVkD7B,GAA+B,OAAO,CAAC,MAAvC,GAAgD,KAA/D;AHlCA,AmBWE,AhByBF,AEzCJ,AXUE,ANkBC,A6BHD,AlBSE,Ac5CF,AT4BA,AWWiC,G3BH1B,CYrBL,AD6BA,EoBlBE,AFSE,AJnCF,AT4BE,EaOE,AlBSF,AKhBE,CJbF,AZuBC,AWMA,CC7BA,CiBoBI,AbPA,CeFD,CfEG,CeFD,EN1BZ,AT4BgB,CJbd,Cafc,AT4BhB,EJbiB,AD6Bf,CoBlBiB,AFSE,AlBSF,CoBlBC,AFSE,CAAD,CjBpBnB,AiBoBF,ClBSuB,CAAC,SAAtB;AC3BA,AmBMM,A5BRN,AHwBA,A6BHF,AlBSC,ANEG,AoB9CF,AEuCE,IFvCF,CMsBA,CFaI,E1BrBE,AHwBF,A2BCF,C3BDG,AKQO,C0BpBV,CFSO,C7BGJ,E+BhBL,AFaY,AJnCF,CAAC,CAAD,CtBcK,AHwBV,AyBtCL,CzBsCA,C2BCa,CxBzBK,AsBdF,CImCG,CAAC,AxBWlB,CwBXiB,AxBWO,CwBX5B,C1BrByB,CEgCrB,AoB9CoB,CAAC,CpB8CM,AoB9CP,CAAN,GAAY,GtBcV,EsBdlB,GtBcsC,KAAK,UAAL,GAAkB,EAAtC,CAAlB;A4BcA,A5BbA,A0BqBF,AlBSD,ANEC,AoB9CE,AT2BF,AWWkB,IFtChB,EImCI,AxBWF,AWnBA,EbbI,AaaF,CaQG,AxBWF,GwBXK,CxBWD,AWnBA,CS3BC,AT2BR,CS3BS,CpB8CC,AoB9CF,CpB8CG,AoB9Cb,CT2Bc,CaQG,CAAC,AJnCF,AT2BA,CaQC,CAAnB,CxBWA,CFhCwB,CEgCD,AWnBA,CS3BC,AT2BxB,Cbb2B,AsBdF,CAAD,AT2BE,CS3BR,GAAY,ItBcM,CAAC,AsBdnC,ItBckC,CAAT,KAAoB,SAAS,CAAC,IAAD,CAAT,GAAkB,EAAtC,CAAzB;AHwBA,A6BFF,AlBUF,ANCI,AoB9CA,AT2BA,AWWI,ItBQJ,AoB9CA,EImCI,CxBWD,CLTC,A6BFE,AxBWF,AWnBE,AWWF,CXXG,EaQE,CbRC,CAAC,CXmBX,AoB9CU,AT2BE,CXmBD,AoB9CA,AT2BE,CaQC,AJnCJ,AEqCgE,C3BA7D,A6BFE,AJnCf,AEuCI,CEJU,AbRE,CaQlB,C7BEkB,AyBrCA,AT2BL,ChBUX,EAAmB,CgBVG,ES3BA,AT2BX,CS3BY,CAAD,CAAN,AT2BW,CAAC,CAAC,AWU6C,CFrC9C,CEqC1B,CtBSF,AWnBgC,CXmBD,CWnBJ,CS3B3B,CpB8CkC,CAAC,CWnBG,EAA5B,CXmBV,EAAyC,EWnBI,CXmBD,CAAC,AWnBE,GAAG,EAAL,GXmB7C,AWnBuD,EAAE,GAAG,EAAlD,CAAV;AbbA,AHwBE,A6BFJ,AxBWE,AoB9CA,AEuCE,IFvCF,EImCI,E1BtBA,A0BsBE,AFIJ,G3BFK,A6BFE,C7BED,EyBrCE,AEuCF,C3BFG,AyBrCA,CzBqCT,A6BFY,AJnCJ,CImCK,AJnCf,AEuCW,C3BFG,A6BFA,C7BEC,A6BFjB,CxBWQ,AoB9CU,EzBqCE,CAAhB,AKSF,CFjCoB,CAAC,AHwBA,CyBrCC,CzBqCC,AyBrCA,CzBqCrB,AyBrCoB,CAAN,CzBqCU,EGxBtB,AsBbwB,CtBaC,CwB0BD,CAAC,EFvC7B,ItBaI,KwB0BwB,CxB1Be,CAAC,AwB0BF,CxB1B1C,EAA+C,GwB0BnB,CAA1B;AxBzBA,AYqCF,AfbI,A6BFN,AxBWC,AoB9CC,AT0BA,AWaE,MxB1BA,A0BsBE,EAAE,AbTF,CDwBC,ACxBA,EaSI,AJnCF,CzBqCC,AgBXA,CAAR,CaSY,C7BED,A6BFE,AbTF,ChBWC,A6BFA,C7BED,A6BFb,CdeE,AfbQ,GeaS,AfbA,AyBrCjB,CtBakB,AYqCA,CZrCC,CYqCC,GZrClB,AHwBE,CGxBoB,CYqCC,AfbA,OGxBvB,AYqCkB,IAAgB,KAAK,OAAvB,CAAlB;AHlCA,AmBWA,A5BbC,AYsCD,AfdM,A6BFR,AxBWD,AoB9CE,AT0BG,AWaD,GF7CH,CbqBE,AmBWA,EFSI,AbTF,EaSI,AbTF,CJXA,AmBWA,AN1BC,CbeA,AmBWA,CFSI,AbTF,CeAP,CfAE,CJXF,AiBoBY,CAAC,CAAD,CjBpBA,AZsBC,A6BFf,C7BEgB,GYtBd,AZsBiB,CAAX;AYpBN,AmBWA,A5BdD,AHwBM,A6BFP,AJnCE,AT0BE,GbtBJ,G0B+BM,AbTF,EaSI,AbTF,GaSK,AJnCF,AT0BA,CSzBL,CIkCS,AbTT,GaSY,EAAhB,AJlCU,CAAC,CAAD,CAAN,GAAY,KADP,EAEL,MAAM,CAAC,CAAD,CAAN,GAAY,KAFP,EAGL,MAAM,CAAC,CAAD,CAAN,GAAY,KAHP,EAIL,MAAM,CAAC,CAAD,CAAN,GAAY,KAJP,CAAP;AtBeF,AcNK,AXUL,ANmBK,A6BFL,AJ9BC,ATqBE,AWYD,ErBpBF,EWVW,CDeT,CaYI,EAAE,CFGD,EEHI,AbTF,CVRT,CAAA,AuBiBa,EZ3BS,ADkBT,CaSG,AbTF,EClBW,AY2BzB,CZ1BA,ADiBiB,CAAR,EVRT,AUQoB,CCjBhB,AXSJ,QqBoBoB,GrBpBpB,GAAA,IWTA,CAAuB,MU6BrB,CrBpBF,IWTA,CADyB,EAEzB,IAAI,kBAAJ,CAAuB,aAAvB,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,aAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,aAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,4CAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,8CAAvB,CANyB,CAApB;AASP,AXEI,ANmBC,A6BFH,AJ9BD,ATqBK,AWYF,K3BPA,C6BII,AbTF,EAAE,CWYC,ErBpBE,ANmBA,A6BFE,CbTD,EaUR,AbVU,ChBWC,CMnBC,AuBkBV,CbVW,CAAX,GaUK,CAAP,E7BCoB,CMnBpB,CuBkBY,C7BCW,CAAhB,A6BDO,E7BCY,C2BCR,EEFC,CAAnB,GACI,CADJ,AFEA,GEAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAT,CAAF,GAAiB,EAAE,IAAI,EAAE,GAAG,EAAT,CAApB,KAAqC,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAf,IAAqB,CAA1D,CAHN;AvBhBC,ANmBG,A6BCJ,AJhCF,AToBM,AWWyB,GrBrB7B,GuBsBI,AbZA,CaYJ,CbZM,CaYC,CAAP,C7BDS,CAAC,AgBXA,EAAE,ChBWC,CAAT,CgBXW,ChBWC,AgBXZ,ChBWa,GAAG,CAAhB,EAAmB,EAAE,CAArB,EAAwB;A+BV1B,AhBwBA,AT/BF,ANkBM,AgBXH,AWWC,IIXF,IJWE,CIXE,AhBwBC,CgBxBA,E/BWG,E+BXR,C/BWW,CAAC,CAAD,CAAH,C2BAK,G3BAK,MAAd,EAAsB,Eea1B,GAA+B,OAAO,CAAC,kBAAvC;AHlCA,AmBYA,AhBwBA,AfdM,A6BAR,AbXC,AWUiB,IfrBhB,EiBsBE,GjBtBE,CAAC,CiBsBE,IAAI,CAAb,C7BAe,CAAP,A6BAQ,IjBtBd,GAAoB,EAApB;AZuBK,A6BAL,AlBME,AgBPE,IECJ,CAAC,GAAG,AFDA,ChBOQ,CkBNZ,MFF0E,CAEtE,OhBMF,CAA0B,IAA1B,EAAgC,AgBRwC,EAAxE,MhBQA,EAAwC;AC3B1C,AZsBG,A6BAH,AlBMF,AKlBA,IaYE,CAAC,ClBMG,EC5BA,AiBsBA,CbZC,CaYL,KjBtBW,CAAC,CD4BG,GAAG,EC5BlB,EAAoB,AD4BE,AKlBF,CLkBG,AKlBF,CAAD,EAAI,CAAJ,EAAO,EAAP,ELkBtB,AKlBiC,EAAX,CAAtB;AJTI,AZsBD,A6BAF,AbZF,AWWK,GEFJ,E7BHS,CYhBL,GiBsBG,EjBtBC,AZsBC,CYtBA,CiBsBE,AFDF,CAAC,GAAG,CfrBT,AiBsBY,AFDP,EAAO,CfrBE,CiBsBE,AFDF,CECX,EAAgB,AFDF,GfrBI,CAAC,MAAtB,CeqB4B,CAAC,MAA7B,EAAqC,CAAC,GAAG,EAAzC,EAA6C,EAAE,CAA/C,EAAkD;AfpBnD,AmBWD,A/BWE,A6BAF,AlBMF,AKjBF,AWUQ,IIVJ,AFWA,CAAC,ElBME,CkBNC,CEXA,CAAC,AFWL,AFDI,C3BCG,AWMA,CoBjBP,A/BWQ,AWMA,GXNG,AWMA,CXNT,AWMJ,AgBPY,E3BCI,AWMA,CXNC,C2BDD,E3BCI,AWMpB,CXNI,CWMkB,CXNC,CWMC,CXNC,AWMzB,CXNI,CWMuB,CXNC,O2BDK,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,MAAjB,CAA3B;AZeJ,AfbI,A6BAJ,AlBMA,AgBPG,IECH,CAAC,GAAG,AlBME,CIOD,CcbL,E7BAQ,GAAG,CAAC,AWME,CXNH,CAAH,CWMS,GXNC,GealB,GAAwB,AfbpB,EAAsB,AWME,CAAC,CIO7B,AJP4B,CAA5B;AC3BA,AmBWA,AhByBA,AfdM,A6BAP,AlBMC,GkBTK,CERL,InBXI,AD4BE,CoBjBF,AFWC,CEXA,KnBXM,CAAC,AD4BE,CXND,CAAP,CWMW,GC5BjB,EAAoB,GmBWpB,ApBiByB,CoBjBF,ApBiBG,CAAD,CAAzB,CAFyB,CAIzB,MoBnBA,EAAmC,KAAI,CAAC,wBAAxC;AnBVE,ANEJ,ANoBO,A6BAL,AJjCE,AKGN,AH4BM,ErBlBJ,EuBoBE,CAAC,CjBtBC,EiBsBE,C7BFA,AyB/BQ,CIiCN,CjBtBA,CAAC,ANET,CAAA,AuBoBW,CJjCP,CzBiCS,AyBjCO,GIiCJ,C7BAC,EYtBb,AiBsBe,AJjCf,CbWe,ANEnB,ANoBoB,CMpBpB,ANoBqB,A6BAnB,AJjC0B,CzBiCR,CAAH,GAAS,CYtBA,CAAC,GNE3B,AmBbI,CzBiCS,CyBjCyB,CbWlC,ANEJ,ANoBkC,UMpBvB,IAAX,EAAiB,QAAjB,EAAyB;AMDtB,AmBWD,A5BdF,AcCI,AXIF,ANoBM,A6BAN,AlBOA,AcxCF,AE+BG,ExBvBH,E0ByBE,CAAC,CJjCC,EMsBE,A5BdN,AGKM,AuBoBA,AlBOA,CRhCN,AcCc,AN+BP,CkBPC,GvBpBG,AuBoBA,CvBpBC,ANoBA,C+BXC,CAAC,ANtBd,CdwCM,CRhCN,A0ByBgB,AJjCA,CtBQhB,EcCI,AXIE,ANoBa,A6BAA,AlBOA,CM/BQ,AXIP,AK2BA,CkBPlB,GvBpBI,CWJF,AXIF,EWJgC,AXIP,CNoBf,AWOV,EoBlBA,A5BdF,AQgC8B,EoBlBE,C5BdhC,AHyBiC,IiBxB7B,EAA0C,IdDhC,AHyBN,EAAqC,GGzB7C,EAAmB,EcCf,EAAuD;AccvD,A5BdF,AcCF,AXII,ANoBM,A6BAT,AlBOG,AcxCF,IAAA,EMsBE,AdbE,IXII,CyBSF,CAAC,AdbG,CXIC,CmBbD,CRSG,AQTF,CnBaG,ANoBF,AyBjCF,CAAV,GRSkB,AXIA,AmBbF,CRSG,AXIA,INoBE,CAAC,AyBjCA,CRSxB,AXII,AmBbqB,CAAD,CAAtB,EMsBE,CAAyB,A/BWN,EAAS,GAAG,CAAC,C+BXA,A/BWC,C+BXA,E/BWG,CAAL,CAAZ,EAAqB,GAAG,CAAC,CAAD,CAAxB,CAAT,G+BXV,A/BWkD,CAA5C,EAA+C;A+BVtD,A5BdD,AcCF,AXII,ANoBQ,AWOT,AcxCD,AE8BA,IF9BA,CdiCyB,CMxBrB,ANiCJ,ERlCM,CwBsBD,CrBjBG,CHLC,GAAG,AGKA,AmBbF,CRSG,AQTF,CAAD,CnBaK,AmBbf,CRSgB,EQTA,CtBQG,AGKA,ANoBF,CAAC,GAAG,CGzBT,AGKG,ANoBL,AyBjCY,CnBaG,AmBbF,CAAD,CAAtB,CnBae,CHLc,AcCA,AXI3B,AqBiBgB,GVrBc,CAAhB,GAAoB,CdDxB,GAA4B,EwBsBxC,ExBtB4C,KcC5B,GAAoC,CAAtD,KdD0C,CAAU,KAAV,CAA5B,GAA+C,KAA3D;ASED,ATDC,AYsCA,AErCF,AjBwBW,A6BDX,AJhCE,AE6BiC,IF7BjC,ERSE,EdDI,CYsCD,AcdA,CAAC,CAAD,C1BxBK,AcCF,CjBsBA,A6BCC,CAAJ,AJhCK,CtBQG,AcCF,AYuBb,AJhCa,CAAD,CAAV,CtBQgB,CAAC,AHyBF,CyBjCC,GtBQhB,AYsCA,EErCF,CFqCwB,AU9CA,CAAC,CAAD,CAAtB,IV8C6B,CAAC,aAA9B;AHnCF,AmBWE,AhByBD,ATlCG,ANqBQ,A6BDb,AJhCG,AE6BE,IF7BF,IMqBI,AJQF,GrBjBK,GmBZG,CMqBC,AzBTA,AmBZA,CMqBC,AzBTA,AmBZF,CAAV,EnBYe,AqBiBF,CrBjBX,AmBZc,CzBiCC,CMrBC,ANqBR,CMrBS,GyBSnB,AzBTsB,AmBZA,CAAC,CMqBC,ANrBF,CnBYpB,AmBZF,EnBY2B,EAAE,CAA3B,EAA8B;AyBU9B,A5BdF,AYwCF,AEvCA,AXIM,ANqBK,A6BAb,AlBOI,AcxCA,AE4BgB,MIPd,AdbA,EdDE,AGKA,AK4BA,CRjCC,E4BcC,ANrBC,CMqBA,A5BdC,AcCA,AXIA,CHLC,AGKA,CAAD,CAAJ,CK4BQ,CMhCC,CXIC,CHLd,EAAiB,AQiCA,AcxCjB,IMqBE,CAAmB,AdbvB,EAA0B,CNgCxB,EAA2B,EoBnBC,CAAC,IzBTR,IAAP,EyBSZ,AzBTyB,IAAI,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAAV;AyBUH,A5BdC,AcCF,ATDJ,AFKO,ANqBI,AWOL,AcxCH,AToBG,AcjBN,AHyBQ,GFlCN,CjBaF,ELAM,EcCE,AUoBA,CxBrBC,AsBPA,AToBO,CbbN,CHoBA,GQpBV,ELAM,AwBoBwE,CVnB7D,AjByBA,A2BJT,ExBtBW,CcCC,CAAhB,AjByBiB,EiBzBE,CdDC,AH0BA,AgBblB,ChBamB,AgBbO,ChBaN,CgBbpB,EhBauB,AgBbO,ChBaZ,CAAH,AgBbf,AWOwE,EXPtC,AWOlC,C3BM4B,CgBb5B,Cbba,CaayB,EAAtC,CbbkC,AH0BnB,CgBbyB,EhBaH,CG1BrC,KH0B2C,GAAG,GAAG,CAAC,CAAD,CAAtC,EAA2C;A+BVxD,A5BfC,AcCC,ATFN,AR2BY,AWOP,AcxCD,AToBF,KLQ2B,CAczB,AKtBI,EAAE,GSpBC,AToBE,EAAE,GAAG,CSpBD,CAAC,AToBhB,ChBaiB,CAAC,GAAG,AyBjCZ,CzBiCC,CyBjCR;ARSE,ATHN,AFMM,ANsBK,AyBjCR,AToBD,AWQI,MVpBA,ADYE,EAAE,ERfV,CR0BiB,AgBXJ,CCZD,CXGC,AUSE,AWQJ,CAAC,CVpBG,CTHf,AQekB,CVTZ,ANsBW,A2BLF,CnBvBf,AQeE,AWQS,EVpBS,AUoBF,CVpBG,CUoBD,GAAG,CVpBR,EAAT,QUoB4B,CAAC,MAA7B,EAAqC,CAAC,GAAG,EAAzC,EAA6C,EAAE,CAA/C,EAAkD;AfnBtD,ATFE,AcEC,ATJoB,AFOpB,ANsBO,AyBjCX,AToBC,AWQM,EfpBN,AJJuB,GSCrB,AXDA,GHEM,CSER,AIYO,CJZP,AeoBM,CVpBG,ATJc,AFOd,AUSA,CRhBc,EQgBX,EAAL,AWQK,CxBtBK,ESEjB,AZyBiB,AgBbA,AWQF,CfpBf,ATFoB,AH2BV,CgBbS,CRhBI,EAAA,AQgBD,CbdG,CaczB,IRhBuB,AmBwBG,CnBxBH,AmBwBI,CAAD,CAApB,EfpBN,ATFoB,GSEpB,CTFuC,KAAK,MSE5C,ITFuC,CAAgB,IAAhB,CAArC;ASGA,ATFA,AYuCF,AErCI,ATJJ,AFOI,ANsBK,AWOP,AcvCJ,ATmBC,EDyBC,IErCI,EdFE,AQkCA,CAAC,GIKP,AErCU,CFqCV,ATlCW,EWHE,EdFX,AQkCA,EMhCe,ANgCA,GIKjB,CAAA,CErCa,CLAA,AKAU,KLAL,CGqClB,AErCa,CAAT,CXGc,CSkClB,GHrCE,ANGS,SSkCX;AACE,AErCC,AXEqB,ANuBjB,AWOH,AKnBN,AWMQ,MhBaF,IAAI,CIKC,AJLA,IgBbE,CZkBG,AYlBF,GAAG,CAAJ,EhBaP,AgBbc,ChBaG,CgBbD,CZkBlB,EYlBqB,IhBanB,EgBbyB,CAAC,MAAxB,EAAgC,CAAC,GAAG,EAApC,EAAwC,EAAE,CAA1C,EAA6C;AfnBjD,ATFA,AYwCD,AErCA,AXC8C,ANwB1C,AWOD,AgBbI,GZgBR,CHpCE,ENE6C,EHJzC,ESEJ,ANES,CMFT,CNEoD,AqBkB9C,KxBtBN,CwBsBY,CxBtBG,CSEf,ANES,CMFH,ANEJ,CqBkBc,cfpBhB,CAAqB,EeoBY,CAAC,CfpBlC,CAAqB,IAArB,AeoBwC,CAAC,CAAD,CAAP,EAAY,MAAZ,CAA3B;AfnBP,AmBaC,A5BfE,AYyCJ,ATrCG,ANwBA,AWOA,AgBbI,GfvBP,EDkB2B,CAoBzB,EoBtBI,E5BfI,WAAW,G4BeC,A5BfE,G4BeC,E5BfI,E4Be3B,U5BfsB,KAAsB,KAAK,YAAL,GAAoB,EAA1C,CAApB;ASIJ,AmBaE,A5BhBE,AcEJ,AXEC,AqBkBI,GrB7BL,IWSK,GdFK,CcED,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GdFK,GACnB,AcCN,EAA4B,CAAC,EdDlB,EcCsB,SAAjC,EAA4C,GdDtC,KAA0B,KAAK,gBAAL,GAAwB,EAAlD,CADF;AcGF,ATLF,AFQA,ANsBE,IiBzBA,MAAM,CAAC,ATLT,AR8BS,CiBzBD,AjByBE,CiBzBR,EjByBW,CiBzBE,AjByBb,KQ9BF,CAAY,GSKY,GAAG,ITL3B,CSKgC,CAAC,ATLX,CSKU,CAAlB,GAAyB,GAArC;AdDE,AcEF,ATNF,AR+BC,AWQC,AmBjCJ,AHmBM,QVnBE,ATNN,AGuCM,CMjCC,ANiCA,CRnCC,EAAE,AcEA,CTNV,GLIc,AKHZ,CGsCA,CMjCc,CNiCC,CRnCC,CcEC,CTLjB,CAAA,ESKqB,CAAC,CTLtB,CAAA,CSKiB,CAAS,CdFpB,CAAJ,AKHF,ELG8B,AcEA,CAAC,ETLxB,CSKmB,CAAU,ETNtC,ESM0C,CAAC,EAAL,IAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAL,CAAN,GAAgB,EAA3B,CAAD,GAAmC,GAA5C,CAAT,CAAjB;AdDI,AKFJ,AR6BH,AWQK,AgBdD,MhBcC,ERnCE,EQmCE,CAAC,QRnCQ,CAAC,EQmCd,CAAiB,CRnCJ,CAAX,GAAoB,CAApB,EQmCF;AoBnBF,A5BfI,AcCJ,AjB2BJ,AWOM,AczCA,QMqBE,A5BfA,AcCA,ANkCA,CMlCC,ANkCH,AczCU,GROJ,OccO,GAAG,AddlB,CdDmB,CAAC,AcCA,IdDD,CAAf,C4BeJ,E5Bf4B,CAAxB,AsBNF,CAAmC,MAAnC,EAA2C,CAA3C,EAA8C,CAA9C,EAA+C;AtBO9C,AcCD,ANkCA,AczCJ,AE0BE,MVnBE,AQPA,CROC,CQPL,CE0BO,CVnBC,AQPA,EAAR,QROI,WUmBgB,mBAAlB;AIJA,AhBwBF,AEtCG,ANkCA,AKrBC,AWKqC,EZoBzC,GExCE,ANWyB,CA2BzB,EoBtBI,CfDQ,ECbL,CFsCT,CAAA,EEtCa,CAAC,GAAG,CAAC,EFsClB,CAAA,GCzBI,CeCqB,AfDO,GDyBhC,AEtCS,ADaL,ECb0B,ADaK,CDyBnC,CgBxBE,EAAgC,ShBwBlC;AHrCA,AmBcI,A5BhBA,AYwCF,AEtCE,AQRJ,ATqBA,AWKI,EflBJ,IKAI,AQRA,ATqBE,CCbD,AQRA,ATqBE,CbfD,CSEN,CAAA,AKAQ,AQRA,ATqBE,CDyBD,AEtCA,CUkBC,CXLG,CAAC,EDyBA,AU9CA,CAAC,CAAD,CbQd,ATFiB,AsBNjB,CbQA,ATFkB,AaelB,CDyBE,AEtCE,AQRe,CE0BC,ExBpBH,CAAb,CSEJ,GAAA,YAAA;AACE,AmBcE,AhBwBH,AEtCE,ATLD,AiBHA,AE0BI,GZkBN,CPzCE,AiBHA,EAAE,GjBGE,AiBHC,CMsBC,AvBnBD,CIKE,CJLP,GiBHW,CbQC,AaRA,CMsBC,ANtBF,CMsBG,ANtBT,EbQL,CaRiB,CAAjB,SMsBM,KAA0B,SAA9B,EAAyC;AnBb5C,AmBcK,A5BjBF,AY0CJ,AP3CE,AFMF,AKgCE,Ac1CD,ATqBD,AcZI,AHiBI,ErBhBR,CMJA,AaRA,Cd4CE,GKrBG,CeCC,ApBoBA,AgBhBE,ChBgBD,Ac1CA,AKSO,E3BJL,AagBA,CVXT,AUWU,CVXV,AmBVW,EtBKE,AagBA,CbhBC,AagBd,AWIoE,CAE5D,CXNQ,CeCC,A5BjBA,AsBLA,ATqBA,CbhBR,AsBLS,Cd0ChB,Ac1Ce,CMsBG,A5BjBA,AGKpB,AKgCoB,Ac1CT,ATqBS,CVXpB,AUWA,AcZI,C3BJkB,A2BIO,CLTN,ATqBA,CSrBhB,ATqBiB,CbhBC,CsBLC,ATqB1B,CeC2B,ADbvB,CCawB,ApBoB1B,AKrB0B,AWIwC,CGhBhC,CnBiCN,AgBlB1B,GrBdJ,CHLkC,CAAC,CGKnC,EKgCE,CmBjCE,ECaE,A5BjBF,A2BI4C,E3BJL,CAAC,EGK/B,CHLkC,EAA3C,CGKJ,CHLmD,CGKhC,CHLkC,CAAjD,A2BIA,E3BJoD,A2BIK,IxBC7D,EAA2B;AMA3B,AmBaK,A5BjBC,AcEJ,AXGA,AKgCD,Ac1CC,ATqBA,AcZF,IbFE,AQPA,EAAE,AKSA,ExBCE,CmBVC,CROC,AQPA,CROC,AXGP,CHLQ,AcEA,AaEV,CLTW,EROE,CAAL,CAAN,EQPe,CROC,AQPA,CROhB,AQPe,CAAf,OtBKyB,SAAS,CAAC,CAAD,CAA9B,EAAmC;AACjC,AcEP,AjB0BG,AWSL,Ac1CE,ATqBC,AWKE,GF5BG,KTuBD,ChBYQ,AyBjCP,CtBKC,GwBqBC,CXLG,AWKF,GXLK,AWKF,CXLX,AWKO,CxBrBQ,CwBqBD,EAAE,E3BOd,CAA0B,A2BPT,G3BOjB,EAA+B,KAA/B,A2BP2B,CAAC,C3BOU,GAAtC,EAAyC,A2BPzC,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD;AIJjD,A5BjBgB,AGKlB,ANwBF,AyBjCE,ATqBA,AcbF,AHkBM,IF1BJ,EMqBE,ANrBA,AKQA,ExBCE,AUYA,ChBYC,AyBjCA,CAAL,AE0BI,GrBjBK,AUYA,CVZC,ANwBA,EgBZE,AcbA,AHkBF,C3BOG,GAAf,AgBZkB,AWKF,CrBjBV,AUYa,AcbA,CCaC,AzBZA,ANwBA,EgBZN,CeAS,AfAA,CeAC,AzBZlB,CyBYmB,AzBZvB,CUYwB,CVZC,AUYA,AWKF,CXLC,Acb1B,AHkB0B,CXLH,CAAO,AcbA,CdaP,CAAT,CAAZ,GeAE,EJKgC,CAAC,CAAD,CAAX,EAAgB,WAAhB,CAAnB;AIJH,A5BjBO,AcEV,ATHE,AFME,ANwBF,AyBjCD,AKQC,AHkBG,InBvBH,CuBYA,G/BkBM,CiB3BD,ATHD,AsBKC,C3BJG,AKDH,AFMG,CyBYD,A/BYE,EMxBE,AwBDF,CtBLT,AR8BY,A8BzBF,CCaC,Adfb,CXGgB,CNwBC,A8BzBF,C9ByBG,A8BzBX,C3BJY,CAAC,AGKA,AwBDF,C3BJC,AGKE,CHNoD,A2BKrD,C3BHV,AH4BO,CAAf,C8BzBqB,ExBCnB,GwBDwB,CAAC,CCaC,E5BlB2C,CAEnD,E2BGpB,C3BLuE,C4BkBhE,A5BlBD,A2BK6B,CAAC,CCaC,EDbE,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;ACc9C,A5BhBG,AcCR,ATFG,AFKE,ANwBF,AgBbA,AcZE,I9ByBF,EMxBE,AwBDA,C9ByBC,CAAC,CGhCA,AGQC,AUWA,CeCC,EzBZE,CNwBL,AgBbM,ChBaT,AgBbU,CbfC,CGIC,AwBDA,CCaC,A/BYA,AgBbA,AcZA,CCaC,AfDA,AcZF,CAAV,C9ByBc,CMxBR,ANwBS,AgBbA,CVXC,AUWlB,AcZkB,E9ByBF,AgBbI,CVXZ,ANwBR,AgBbqB,CVXnB,CwBDqB,CdYC,AcZA,CCalB,AfDN,AcZuB,CAArB,CdYyB,CAAC,EeCE,AfD9B,EAAgC,GeC9B,EAAmC;AACjC,A5BhBE,AcEV,AjB0BI,AyBlCF,ATqBI,AcZD,AHiBC,I3BQF,EyBlCE,CzBkCC,AyBlCA,CMsBC,A/BYA,EG5BE,AsBNA,ATqBE,ChBaL,CAAH,GAAW,CyBlCC,CAAC,CzBkCb,AyBlCY,ATqBI,CbfD,AsBNjB,EAAmB,ATqBE,GeCC,CfDG,CAAC,CeCD,EfDJ,CAAS,EeCxB,CfD2B,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT,CAAjB;AeEC,A5BjBe,AYyCpB,ATrCI,ANyBF,AyBlCA,AE0BC,EZoBH,EU9CE,EzBkCE,AyBlCA,CMoBA,ENpBG,EnBSE,ANyBP,CeYF,CgBxBW,AhBwBX,ETrCa,AmBTA,CnBSC,AmBTA,CAAD,CAAN,CnBSU,CAAb,CmBTe,CV8CnB,ATrCoB,AmBTlB,CV8CF,ATrCqB,GAAG,GAApB,EAAyB,CSqC7B,CTrC+B,CAA3B,CSqCJ,CTrCkC,WSqClC;AgBvBM,A5BjBI,AYyCR,ATrCI,ANyBJ,AyBlCD,AToBG,AcZF,GLVF,CKUE,E9B0BE,E+BZE,AzBbA,CNyBJ,AyBlCK,CtBKG,AaeF,AcZA,CfsCC,ATrCA,CAAC,CAAD,AmBTE,AKQA,CxBCL,ESqCQ,CTrCC,CUWC,CeEC,A5BjBE,AsBLF,CtBKG,AsBLF,CtBKC,AsBLF,AToBE,CeEC,A5BlBuD,AsBJhE,CtBMD,AYwCR,AetCA,ELRqB,CAAhB,AToBH,CbhBuE,C4BkBjD,A5BhBX,AsBNW,AToBA,CeEC,G5BlBgD,EAEtD,E4BgBa,CAAC,A5BlBwC,CAAnE,GGKkB,IAAX,EAAiB,CyBaN,CAApB,EzBb8B,CAAC,CAAD,CAArB,EAA0B,QAA1B,CAAT;AyBcD,A5BhBE,AYwCN,AP1CC,AFKG,ANyBJ,AyBlCC,AToBI,AcZL,AHiBC,GZmBF,AezCA,CtBCE,AiBJA,EAAE,EToBE,CRhBA,AiBJC,AKQA,CtBJA,AiBJC,EjBIN,CAhBoB,AiBYX,AToBA,CRdT,EQcY,GSpBG,CAAC,CAAD,CAAf,EToBI;AJXN,AmBcG,AhByBH,APzCE,AFGC,ANyBJ,AyBlCE,AToBK,AcZJ,AHgBS,EfhBX,CaVO,CKUL,CxBLA,GUiBI,CJZN,AaRO,CbQP,AkBAQ,CxBCC,EwBDE,CdYC,GAAG,CAAT,AcZU,ClBAhB,AkBAiB,ClBAjB,IkBAW,ElBAX,AkBAE,GlBAF,UAAO,GAAP,EAAU;AACR,AmBeA,A5BlBI,AKCJ,AFGE,AN0BN,AyBnCI,AToBG,AcZJ,AHgBG,IFxBF,EnBSE,AmBTA,EbQE,CNCC,AmBTA,CAAL,EtBKQ,AGIA,CMDC,CegBD,GfhBR,CegBY,CfhBG,ETHE,EwBmBT,CAAU,ExBnBI,KAAd,IAAuB,CGIZ,EHJe,CAAC,CGI3B,gBqBe0C,CxBnB9C,EAAmD,CwBmB/C,CAAN;AffA,ATHI,AKCN,AFEyB,AuB0BvB,AJlCH,AToBE,AWIA,SEUW,C1B7BN,SAAS,GAAG,C0B6BhB,CAAyB,GjB1Bd,ATHP,KSGY,OAAhB,GiB0BA,EAA2C;AjBzB5C,ATHK,AGE0C,AuB2BlD,AC3BA,AH/BA,MrB+BkD,GwBA3C,CxBAG,EAA+C,GwBAzD,KxBAU,CAAN;AHDG,AKAL,AFEC,AuB2BD,AJnCF,ATqBE,AcbH,QdaO,CSrBC,EAAE,ETqBE,CSrBC,EAAL,ETqBS,CSrBC,ATqBf,ESrBiB,ATqBA,CRfV,EiBNa,EAAtB,CjBME;AIGA,ATFG,AKCH,AFCA,AmBRH,ATqBK,AcZN,AHeE,SfhBO,AegBA,IfhBI,AIaA,CJbC,CegBZ,EfhBe,AIaX,CJbG,AIYY,CACF,CJbC,EAAE,GAAG,KAAK,YAAL,CAAkB,MAAvC,EAA+C,CAAC,GAAG,EAAnD,EAAuD,EAAE,CAAzD,EAA4D;AAC1D,AKDA,AQNN,AToBK,AWGJ,KXjB6B,CAgB1B,GChBY,UAAV,CAAqB,KAArB,EAA4B,MLCd,IKDd,CLCmB,CKDqB,WLC1B,CAAkB,CAAlB,AKDd,CLCA,CKDqD;ALEtD,AmBcD,A5BjBE,AYyCJ,AEvCA,AUkBF,EZqBE,EgBxBE,EdfI,EdFA,C4BiBA,CAAC,EhBwBP,AEvCY,CFuCZ,EEvCe,IdFE,CAAC,AcEE,CAAC,CcenB,AhBwBF,CAAA,CZzCiB,C4BiBK,A5BjBlB,EcEJ,IFuCA,GAAA,EgBxBE,UhBwBF;AgBtBE,AhBuBA,AEvCF,AXFyB,AN6BrB,A6BCF,IvB9BuB,EWEnB,GjB2BQ,EeYL,CTzCe,CAAW,CuB8BvB,CZ5BG,AjB2BX,CeYU,AfZO,EiB3BH,CXFM,AN6BpB,EAAsB,CeYxB,ATzC0C,EuB8B1C,CvB9BsB,AN6BpB,C6BCkB,C7BDQ,IiB3BC,GAAG,CAAhB,GAAoB,aAApB,GAAoC,CAAtD;ALCE,ATHE,AY0CH,AEvCD,AXFE,AN6BF,A6BCI,AbdF,GDuBF,GErCI,AjB2BE,EgBbE,CJdD,CTHC,CGCC,AUgBE,CCdD,CY4BC,CvB9BT,AUgBY,CCdD,AjB2BE,EgBbE,ChBaC,AgBbA,GJdhB,ATHiB,CSGC,ATHA,CH8BG,A6BCF,C7BDG,A6BCF,AbdL,CCdjB,ADcE,CbjBiB,CAAX,CSGN,GAA2B,AZ2BX,CY3BhB,ATH4B,AH8BE,CG9B5B,C0B+BiB,C1B/BY,CH8Bf,A6BCgB,I7BDM,IAAtB,GAA6B,CAAC,IAAD,CAA/C,C6BCqB,CAAjB;AjB3BF,ATHI,AY2CN,APzCE,AFDD,AN6BD,A6BCG,AbdD,GV7BF,CEcE,AQeA,EhBaI,CgBbD,CAAC,CJdC,AJDD,CAAC,ELFG,AH8BE,CY3BV,CTHU,AaiBP,ChBaU,AgBbb,CJdY,CTHC,AKEb,CQec,CJdd,CJDe,CQeE,CAAC,CAAD,CRfjB,AR4BsB,AgBbtB,ChBauB,MAAzB,CG9B8B,CAAC,IAAD,CAAxB;AACA,AcEN,AXAA,AuBqBA,AbNE,IAAA,ECfE,CDeC,CAAC,CAAD,CAAH,ECfQ,CDeC,EbjBE,CaiBX,CCfa,ADJa,CAqB1B,QCjBF,EAA0B,EdFE,CAAC,IAAD,CAAtB;ASGJ,AKAA,ATAA,AR2BF,A6BED,O7BFM,CY3BC,AKAA,ATAA,GR2BG,CAAC,CY3BC,EZ2BE,CAAb,CY3BE,AKAa,CTAC,AR2BA,CY3BC,AZ2BA,CiB3BC,CAAhB,CjB2BkB,CiB3BC,ATAA,KR2BrB,EAA4B,CAAC,CQ3B3B,CR2BF,CQ3BgC,CR2BC;AY1B7B,AmBgBF,A5BnBI,AcGF,ATAA,AR2BF,A6BGJ,AbdI,AcfE,ICeF,A/BWA,EQ3BE,CR2BC,CAAC,C+BXA,AfAC,AcfO,ClBDJ,AmBgBH,CvBhBC,AR2BC,CQ3BA,AR2BC,CgBXC,CAAC,CbnBC,CSGG,CTHD,AamBA,ChBWV,AgBXW,CJhBG,ATHb,AH8BJ,EG9BiB,AamBA,ChBWC,AgBXlB,EJhBsB,AIgBF,CRhBlB,AQgBmB,CRhBA,AsBCnB,CCeF,ADf8B,CdeN,CAAxB,CeAyB,CnBhBR,AZ2BU,AgBXA,ChBWC,AgBXA,Acf1B,C9B0ByB,CY1BrB,AZ0BN,AgBXA,AcfqC,EtBDnC,AQgB8B,GJfrB,KkBAT,ElBDe,AmBgBjB,ADfiD,GlBC3C,GAAG,CAAC,MkBDR,EAA4D,oBlBCxD,EAFJ;AAGA,AmBeF,A5BpBM,AcGJ,ATAD,AR2BF,AgBXG,AcfJ,MlBCI,AKFA,AaCA,IdeM,EJdA,AKFA,CLEC,CIcG,CbnBD,AcGA,CaCC,CdeG,CAAC,EChBA,CAAC,ADgBE,AcfF,CdeG,CAAD,CJdjB,AIcc,CJdK,AIcE,CChBZ,ADgBK,CAAD,CChBb,ELEwB,AIcE,Acf1B,Gde6B,CbnBzB,AamB0B,AcfF,C3BJC,AamBA,CAAH,CJd1B,AIciC,CAAP,CbnBtB,AamBJ,AcfiC,E3BJE,G2BIG,UAA1C,E3BJQ,A2BI8C;A3BH/C,AcGJ,AjB2BJ,A8B1BG,KbJA,IaIK,EbDE,EaCE,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,KAAK,CAAC,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AlBC9C,AKDA,AjB4BN,AyBnCM,ATsBA,AcdA,MbDA,AaCA,GLRU,CbQN,CIcC,CCfC,GLCG,AKDA,ADeA,CAAC,AcdA,CAAC,CAAD,CbDG,ADeA,Acdb,CdcA,CJdI,CIcY,AcdA,CdcC,CCfR,CAAU,CLCC,AIcA,CStBpB,ATsBqB,AcdA,CLRQ,AKQP,CAAD,CdcG,AcdxB,CbDS,ADeT,CCfA,CDe2B,CStB3B,ATsB4B,EStBS,ATsBrC,EAAgC,GJdhC,EAA0B,GaR1B,EAA+C;AbS7C,ATLA,AcIH,ATFF,AiBLD,ATsBM,AcdH,SLRI,GTsBG,CJdC,AIcA,EbnBE,EamBE,CAAT,CStBW,CAAC,ATsBA,KJdZ,CAAkB,ATLA,AsBHP,CtBGQ,CsBHC,EbQpB,CACE,ATNgB,CAAlB,MsBH8B,CAAC,CAAD,CAAnB,EAAwB,QbS1B,EaToC,CbS3C,AaT4C,CAAD,CbS/B,AaTH,CAAjB,qBbSiC,UAAzB,EAAqC,KAAK,MAA1C,EAAkD,IAAlD,CADF;AAGD,ATPA,AcIJ,ATDD,AiBND,ATsBS,UAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ;AeEN,AhBuBF,ATzCA,AmBJF,ATqBS,AcfL,EfuCF,ATzCA,EyBkBE,ADhBA,KCgBI,AfHA,AcbC,CCgBA,EhBuBP,ATzCA,AwBEU,CfuCV,ATzCA,EUiBa,ODwBb,ATzCA,AwBEE,CCgBA,AhBuBF,ATzCA,GyBkBuB,OAAO,AzBlB9B,CyBkB+B,EzBlB/B,GSyCA,GAAA,CgBvBE,GzBlBS,IAAX,EAAiB,ESyCjB,MTzCA,EAAyB;AMKrB,AmBeF,A5BtBE,AY4CF,AExCF,AXDE,AUiBM,AcfP,MlBEG,CKHC,CXDG,CMID,CAAC,AIaA,CDwBC,AExCA,AXDE,CWCD,CdJC,AaoBA,CAAC,CChBC,ADgBF,CJbP,AGqCU,AExCd,ADgBQ,CAAO,CChBC,ADgBR,CChBS,GdJb,AcIgB,CDgBC,IAAI,CChBzB,EFwCS,AExCmB,ADgBA,CChBC,EDgBE,CDwBC,ACxBA,CChBC,ADgBF,CAAH,CAAO,CAAP,CAApB,KChBR,EAA4C,WFwCI,KAAK,MAArB,CAA9B;AHpCC,ATPA,AY4CF,AExCC,AXFY,AUkBP,GDsBP,CEtCE,MAAM,CAAC,CAAD,CAAN,GAAa,MAAM,KAAK,CAAC,CAAD,CAAZ,GAAmB,SAA/B;ALID,ATPA,AY6CD,AEzCE,AXHmC,AuBgCjC,AbbC,AchBL,GlBlBA,AT9BA,CcgDE,AXHmC,KuBgCvB,AC7BP,CbAC,CAAC,CAAC,AXH0B,CAAW,CwBG/C,CbAa,CAAL,CAAN,EXHA,CWIG,MAAM,EY4BP,CAA8B,CZ5BnB,CAAC,IAAL,CAAU,IAAI,AY4BrB,CZ5BsB,CY4BqB,EZ5B1B,CAAS,IY4B1B,CZ5B+B,CAAC,AY4BoB,CZ5BnB,GAAG,CAAL,CAAL,GAAe,MAAxB,CAAV,CAAP,CY4BA,EZ5BqD,AY4BiB,IZ5Bb,CAAC,EAA1D,GAA+D,EADjE;ALKF,ATPA,AcIC,AY4BD,AbbG,AchBJ,AHkBD,MEWQ,GFXC,cEWgB,CFXzB,CAAyB,CEWG,UFX5B,EAAsC,MEWH,AFXnC,EAA4C,KEWF,GAAG,GAAjB,EAAsB,GAAtB,IAA6B,GAAvD;AvBhCE,AN+BE,A6BEJ,AbbC,AcfH,AHiBE,GXrCmC,CAqCnC,EaWM,AFXF,CEWG,CvBjCD,CN+BQ,C6BEJ,AFXF,CrBtBN,EAAS,AqBsBA,CEWG,AFXd,C3BSI,A6BEW,C7BFM,E6BEX,C7BFN,A6BEe,E7BFO,GAAtB,EAAyB,A6BEH,iBAAhB,CAAV;AEXE,AdjBF,AXJI,AN+BJ,A6BEA,AFXA,IIDE,EzBrBE,AN+BE,A6BEA,AFXA,C3BSC,E+BVD,AdjBC,AUkBE,CIDF,A/BUG,E2BTE,CrBtBD,AN+BE,CM/BD,AN+BE,CiB3Bd,EXJW,CAAP,AuBiCc,G7BFR,A6BEW,C7BFC,C2BTC,CIDrB,AJCsB,C3BSd,CAAV,C+BVwB,GJCxB,CIDE,QFYqC,IAAI,CAA3C;AEVE,AdlBH,ATFC,AFFG,AN+BH,A6BEA,AFXA,EnBpBA,GFJE,CNiCI,A6BEA,AFXF,EAAE,GrBtBG,AN+BE,A2BTF,CnBpBT,CAAA,CR6Bc,CM/BD,AN+BE,A6BEA,G7BFG,A6BEA,C7BFC,CM/BD,AN+BlB,CM/BmB,CEEnB,AqB+BsB,AFXF,CnBpBpB,AqB+BuB,AFXF,GnBpBrB,AqB+BkB,AFXM,CEWG,CvBjCd,CEEb,AFF2B,AuBiCT,AFXS,CAAP,CEWW,AFXtB,CAAqB,CrBtBjB,AqBsBJ,CrBtBA,AqBsBT,ErBtBkC,GEE9B,GAAJ,CqB+BkB,CrB/BX,AqB+BP;ArB9BE,AFFE,AuBkCJ,AbdA,AWEA,MEYI,AbdE,AWEF,CXFG,CRlBD,AmBoBA,CEYC,CbdG,CVpBD,AqBsBA,CEYC,CrBhCR,CQkBY,CVpBD,CAAC,AuBkCA,CAAC,EvBlCE,AUoBP,CVpBD,AUoBW,CAAV,CVpBU,AuBkCV,AbdV,AWEoB,CEYC,AFZA,CrBtBC,AuBkCA,EFZE,CrBtBC,AuBkCA,EFZE,CAAP,CrBtBS,AuBkCnB,AFZD,CrBtBqB,AuBkC9B,AFZ8B,CAArB,CAAT,IrBtBI,EAAkC,CAAC,GAAG,EAAtC,EAA0C,EAAE,CAA5C,EAA+C;AHAnD,AGCM,AN8BN,A6BIA,E1BnCA,IH+BI,A6BIA,E1BnCJ,CAAA,A0BmCO,E7BJP,C6BIU,CvBlCC,AN8BA,G6BIG,CAAC,C1BnCf,CAAA,G0BmCU,CAAW,CAAC,CAAC,GAAG,GAAG,CvBlCvB,CAAyB,CHD/B,A0BmCgC,G1BnChC,AGCmC,CAAC,AuBkCf,CvBlCc,CAA7B,EAAkC,AuBkCA,EAA9B,CAAV,I1BnCA,CGCM;AHAJ,AY4CF,AP1CE,AFDG,AN8BH,A6BIF,AbfA,AWEA,EZsBA,EfbE,E6BIE,C7BJC,AgBXA,AWEA,CnBpBC,AR6BA,CG/BC,A0BmCA,EbfE,AWEA,CZsBT,AcTU,AbfA,AWEA,CZsBV,AP1CW,AqBiCA,C7BJT,CAAW,AgBXA,AWEA,C3BSX,A6BIY,AbfA,AWEd,E3BSgB,A2BTA,CxBtBd,AH+BA,A6BIe,AbfA,AWEA,CnBpBX,AQkBN,EDwBA,AcToB,AbfA,AWEA,CxBtBC,AY4CrB,ACxBqB,CRlBC,CmBoBtB,CEaU,Cbfe,AWEA,CXFzB,AWE0B,CnBpBC,AqBiCA,CbfC,AWE5B,CXF6B,CaeC,AFbA,CXF9B,EaeiC,AbfA,CRlBX,CO0CtB,AP1CmC,AqBiCnC,E1BnC2B,CY4C3B,IZ5CgC,OKEV,CO0CtB,AP1CkD,ELF7B,CAAnB,AKEoB,CAApB,EAAsD;AIMxD,ATPC,AY4CC,AP1CE,AFDD,AN8BF,A6BID,AbfE,AWEA,EffF,AiB4BA,C1BrCA,CasBE,CVvBO,AuBsCN,AbfA,CRlBC,AQkBA,CAAD,CaeG,AbfJ,AWEM,CffR,CAAA,AeeU,CZsBD,AP1CA,AFDA,AUmBA,CaeC,CAAC,AFbE,CnBpBD,AQkBA,CAAC,CDwBC,ACxBF,CaeN,AbfG,CaeO,AbfA,CJbhB,AJLiB,AQkBR,CJbT,CiB4BmB,EbfE,CaeC,AFbE,CAAC,CffzB,AJLY,AQkBY,AWEA,CnBpBC,AQkBA,AWEZ,CZsBX,ACxBsB,AWEI,Cff5B,AIaqB,AWER,CnBpBD,AQkBgB,AWE1B,CnBpBE,AQkBiB,CAAnB,CaeI,IAA6B,EjB5B5B,OiB4BP,CjB5BA,EAAe,CAAI,CAAnB;AAEA,AmBcE,A5BrBF,AY2CC,AP1CE,AFDC,AqBqBF,GZoBF,CgBpBE,IJAM,CIAF,CAAC,AJAG,CrBrBD,EqBqBI,OIAX,GAAkB,CJAI,CAAC,CAAD,CIAtB,AJAW,CAAe,CAAf,CrBrBT,AqBqBF,CrBrB2B,IAAzB,EAA+B,QAA/B;AS6CJ,AT5CG,AN6BH,A6BKA,AbhBE,AWGA,IAAA,EEaE,EFbE,C3BQC,A6BKA,AbhBA,GWIH,CEYO,AbhBA,ChBWX,AgBXY,CagBZ,EAAe,AbhBA,CAAC,GAAG,CAAjB,EAAoB,CAAC,IAAI,CAAzB,EAA4B,CAAC,AWIjB,EXJZ,AWIc,EXJmB,CWIhB,EAAf,KACC,IAAI,IAAI,CAAC,GAAL,CAAS,qBAAU,EAAV,CAAT,CAAJ,GAA8B,IAAI,CAAC,GAAL,CAAS,qBAAU,EAAV,CAAT,CAD/B,CADF;AIAD,AvBpBC,AFAD,AN6BF,A6BKG,AJrCE,ATqBA,AcfA,AHoBF,GrBlCF,CuB6CE,AFXA,EXLE,AWKA,CEWC,EJrCS,ATqBP,AcfO,AHoBP,CEWC,AbhBA,CRlBC,AqBkCP,AbhBK,AWKL,CXLE,CAAO,CAAP,ERlBF,GQkBe,GAAG,AcfhB,CLNA,ATqBiB,AcfO,CLNC,ATqBT,CAAH,CAAO,CAAP,ISrBb,ATqByB,CAAC,CSrBQ,ATqBP,Acf3B,Cde0B,CAA1B,AcfkC,KLNlC,EAAyC;AMyB7C,AvBrBC,AR8BH,A6BII,AJrCF,ATqBG,AcfH,AHoBE,GnB7BF,CqBwCE,AFXA,EAAE,CEWC,EJpCH,AEyBK,EEWE,AFXP,CEWA,IJpCO,CAAC,CAAD,CAAP,IAAc,CKKR,MLLe,CAAC,CAAD,CAArB,CKKgB,CAAC,ELJjB,KKIM,ELJC,AKIT,CLJU,CAAD,AKIqB,CLJ5B,IAAc,KKIhB,ELJuB,CAAC,CAAD,CADrB,IAEA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAFrB,IAGA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAJvB;AjBKA,AFFF,AuBmCG,AJhCF,ATgBE,AcfD,AHoBC,SrBxBH,UAAA,IwBImB,UAAjB,EAA6B,UAA7B,EAAyC,cAAzC;AxBxGF,AmByGA,AKAC,CxBzGD,CAAyB,eAAzB,CAAA;AAsGA,AuBmCE,AbjBA,AcbF,AHkBE,MEYI,GAAG,AbjBA,AWKC,CXLR,GaiBW,AFZC,EEYZ,CFZe,CEYA,KFZP,GAAgB,MAAjB,GAA2B,GAAlC;AEaE,AbjBH,AWKA,IEYG,GAAG,GAAG,CAAN;AEdF,AFeE,AbhBJ,AWKA,EIJE,EFeE,GAAG,IAAI,CAAP,GEfF,CAAA,SAAA,CAAA,wBAAA,GAAA,YAAA;AACE,A5BrBF,A0BoCC,E1BpCD,MAAA,C4BqBO,A5BrBP,SAAA,C4BqBE,A5BrBF,G4BqBoB,IAAlB,K5BrBF,GAAA,UAAa,IAAb,EAAiB;A4BsBhB,A5BrBC,G4BmBF,Q5BnBU,KAAK,UAAL,IAAmB,KAAK,UAAL,CAAgB,IAAhB,CAApB,IAA8C,SAArD;ASQF,AmBeA,A5BtBC,AKCD,AR6BI,A6BMJ,AChCI,ElBGJ,AJNA,CLHA,MSSA,AZuBc,A6BOZ,ACjCY,ClBGd,EJNA,AqBoCK,CrBpCL,AR6BI,CAAe,C6BQjB,E7BRE,EYvBJ,AZuBwB,CYvBxB,EJNA,CAAA,AR6BI,A8B1BA,CDiCF,ACjC2B,C9B0BD,E6BS1B,EjBhCF,CJNA,EIMA,CJNA,EsBGI,EAAoC,KlBG9B,GJNV,GIMA,EAAgB,AiBgCJ,GAAV,EAAe,CAAf,CAFA,GAGA,SAHA,GAIA,uBAAU,GAAV,EAAe,CAAf,EAAkB,YAAlB,CAJA,GAKA,QALA,IAMC,iBAAiB,IAAI,CAArB,GACG,EADH,GAEG,MAAM,WAAW,CAAC,MAAZ,CAAmB,iBAAiB,GAAG,CAApB,GAAwB,CAAxB,GAA4B,CAA/C,CARV,CADF;AjB5BE,ATNF,AKAE,AR6BF,A6BgBD,AC1CC,EAAA,I9B0BM,GYvBC,EJNG,CR6BE,C8B1BD,CAAC,C9B0BG,CYvBb,AJNa,ER6BG,CYtBd,AZsBe,E8B1BnB,CAAoB,CtBHV,ER6BK,CYtBJ,CJPe,GR6BI,CAA9B,CYtBI,CJP4B,CAAC,CsBGjC,ElBIsB,CJPI,CAAY,KAAK,CIOvC,GAA6B,GJPP,CAAjB,IIOgC,AJPe,CIOd,CJPxC,aIO+B,CAAwB,MAAxB,CAA7B,GAA+D,MADjE;AAED,AJPA,AR6BD,A6BiBF,AC3CC,GlBCC,AJNA,GR+BI,KAAJ;AeeA,AP1CA,AsBGF,EfuCE,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AHpCF,AGqCI,AfdF,OAAK,EYvBP,EGqCW,AfdA,CAAC,GAAG,CYvBf,AGqCgB,Afdd,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,Cec3B,CfdF,EAAiC;AYvInC,AGsJG,AfdC,AyB3BE,ATeA,CJ5HN,CAAsB,CGoJpB,CfZE,KAAK,AyB3BO,ATeA,GhBYJ,GAAG,CAAC,CYxIhB,AZwIe,CYxIf,AZwII,AgBZE,CSfA,ATeoB,CSfC,MAArB,EAA6B,CAA7B,EAAgC,CAAhC,CTeA,CSfiC,CTeC;AD4BtC,AU1CA,ATeA,SSfO,ATeC,MSfK,CAAC,CAAD,CAAN,IAAa,CAAb,ATee,GAAG,CSfA,CAAC,CTenB,GSfuB,ATeE,IAAI,CAAC,CSfD,CAAC,ATerC,CSfoC,CAA7B,IAAoC,MAAM,CAAC,CAAD,CAAN,IAAa,CAAjD,IAAsD,CAAC,IAAI,MAAM,CAAC,CAAD,CAAxE;AnBHF,AN8BI,AyB1BH,ATeA,QhBWO,EM9BE,CAAC,CN8BC,CAAC,EYvBE,GZuBH,EM9BZ,AN8BoB,CM9BC,AN8BT,EM9BZ,AN8BuB,GAAX,CAAR,EAAyB;AG7B3B,AGCF,AN6BM,AyBzBN,ATeA,EbpBE,MAAA,CAAA,IH8BW,KG9BX,AH8BI,CG9BJ,WAAA,GAAA,UAAY,QAAZ,EAAoB;AAClB,AH8BC,A2BNC,QxBxBE,CAAC,AwBwBO,KxBxBF,EwBwBR,CAAkB,OxBxBpB,CwBwBE,CxBxBoB,CwBwBQ,WAA5B,EAAuC;AIF3C,A5BrBI,AKCJ,AR6BC,A2BND,EIHA,AvBpBA,ImBuBM,MnBvBN,CLDW,AKCX,AmBuBa,EIHb,CAAA,AJGgB,ExBxBZ,IKCJ,CAAA,EuBoBA,CAAA,CJG2B,IAAI,EAA/B,GnBvBA,GAAA,MuBoBA,GAAA,GvBpBA,SuBoBA;AACE,A5BrBC,AKCD,AmBuBF,MAAM,KnBvBI,CmBuBE,GAAG,CnBvBA,MmBuBO,CnBvBZ,AmBuBa,InBvBG,EmBuBX,IAAkB,WnBvBA,EAAP,CmBuB1B,CnBvBqC,KAAK,OAAhB,CAAjB,IAA8C,EAArD;AuBoBO,AvBnBR,AR4BD,A2BLA,GnBzBA,GmByBM,G3BKC,IAAP,G2BLgB,GAAG,OAAO,CAAC,UAAR,IAAsB,WAAzC;AIHI,A5BrBF,AY6CF,AP1CA,AR2BD,A2BLC,EZoBA,IYpBM,IAAI,CIJD,A5BrBA,CY6CT,CAAA,AYpBa,CIJT,CAAS,I5BrBI,EwByBI,CxBxBf,AY4CN,AYpBsB,CZoBtB,MYpBa,CxBxBC,CY4Cd,AYpBA,CIJI,E5BpBc,AY4ClB,KZ5CuB,OY4CvB,GZ7CiB,GAEX,MAAM,CAAC,IAAP,CAAY,KAAK,UAAjB,EAA6B,MAA7B,GAAsC,CAF1C;A4BoBA,A5BjBD,AY2CC,AfdJ,A8B1BM,G3BVJ,M2BUc,EfwCL,CexCL,CAAc,GfwCJ,OAAZ,IexCE,EAA4B;ACiB/B,A5BlBD,AY0CC,AexCD,AHmBA,GIPA,AhB0BA,GYnBI,GGnBG,CHmBC,KAAK,CGnBC,cAAP,KAA0B,EHmBP,MGnBnB,GACH,UHkBJ,EAA+C;AID/C,AhBwBA,AC3BI,AcdQ,AHmBV,IAAA,KXLY,GWKJ,GAAG,GXLT,CAAoB,IWKH,CAAC,KAAT,GAAiB,CXL1B,EAAkC,MWKzB,CAA2B,UAA3B,EAAuC,WAAvC,CAAX;AFnBE,ATeJ,AcfmC,AHoBlC,EGpBkC,OLArB,ATeN,OcfJ,CADG,MdgBe,GAAG,IAAI,CSfzB,ATe0B,CSfO,CTe9B,GAA6B,ESfhC,CTeJ,CSf6C,UAAzC,EAAmD;AjBFvD,AiBGA,ATeD,AcfK,EtBHJ,IiBGM,IAAI,EjBHV,CAAA,AiBGa,MAAM,CAAC,CAAD,CjBHnB,AiBGA,CjBHA,aAAA,GAAA,YAAA;AACE,AFAJ,AmBGE,ATgBF,AcjBiC,AHoB/B,EGpB+B,ILCzB,AEmBF,IrBtBI,AmBGE,AEmBF,CnBtBC,AFAA,CEAC,CAAC,AiBGE,AEmBF,CAAX,EGpB8B,EtBFd,CiBGG,CnBHrB,AmBGsB,AKD8B,CxBF/B,AmBGA,CAAnB,EKHA,CtBAE,AFAJ;AECG,AFCH,AmBEE,AKDD,AHoBC,GnBxBA,GiBKM,AEmBF,IFnBM,GAAG,IEmBb,EFnBmB,AEmBF,CFnBG,CAAD,CAAnB,GEmBA,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC;AxBrBA,AKCA,AR2BI,AyBzBJ,AKAF,E3BHE,IsBGM,EtBHN,CAAA,AH4Bc,CyBzBJ,GAAG,EzByBT,CAAiB,EG5BrB,CAAA,AsBGmB,CzByBf,AyBzBgB,CAAD,CzByBQ,AyBzB3B,IzByBI,EAA2B,UG5B/B,GAAA,UAAoB,IAApB,EAA0B,QAA1B,EAAkC;AAChC,AH4BF,AyBzBA,AEkBA,M3BOM,AyBzBA,CAAC,CtBHC,EH4BE,AyBzBA,AEkBF,G3BOK,C2BPb,GxBrBiB,AH4BA,CAAC,EG5BE,AsBGA,CAAC,CAAD,CAApB,CzByBA,CG5ByB,UAAL,IAAmB,KAAK,UAAL,CAAgB,IAAhB,CAArC;AY4CF,AUxCA,AEkBE,EZsBF,IUxCM,CAAC,EEkBA,CFlBG,EVwCV,CAAA,OUxCoB,CAAC,CVwCrB,AUxCoB,CVwCpB,AUxCA,QEkBoB,CZsBpB,GAAA,CYtBE,SZsBQ,MAAV,EAAgB;AZ3Cd,AY4CA,AfhBF,AyBxBA,AEkBE,M3BME,AyBxBA,EtBJE,CY4CC,AYtBA,C3BMC,KAAK,CegBX,CZ5CA,CsBIc,CtBJC,AY4CA,AfhBA,CAAC,CyBxBC,IVwCjB,CfhBF,EAA0B,G2BNN,WAAlB,CFlB8B,OAAhC;AMiBA,A5BpBI,AY4CF,AfhBA,A2BNA,EIFF,OhBwBO,AYtBA,CxBtBG,CH4BD,I+BRT,A5BpBe,C4BoBf,A/BQE,EG5BgB,AY4ChB,GAAiB,CAAC,EAAE,CgBxBtB,CAAA,C5BpB2B,CAAC,EY4CA,CYtBR,GZsBY,CZ5Cd,CAAkB,G4BoBpC,AhBwBqC,GgBxBrC,AJEE,ExBtBgB,CAAd,CY4CgB,CAAlB,OgBxBF;AACE,AhBwBD,AfhBA,AyBzBD,AEmBE,GZmBF,GUtCI,CAAC,EEmBE,CFnBC,IAAR,EAAc,eEmBM,iBAAlB;AIFO,A5BpBL,AY8CJ,AP7CA,AiBGE,AEmBA,EnBtBF,EiBGE,KEmBK,CxBvBC,EKCR,CAAA,ELDa,CsBIC,GAAG,CtBJC,CAAC,CAAf,AKCJ,CAAA,CLDsB,KKCtB,EiBG6B,AEmBT,CnBtBpB,EiBGgC,QjBHzB,AmBsBL,GnBtBF,EAAY,QAAZ,CiBG6C,CjBHzB,GiBGlB;AMiBE,A5BpBE,AKCJ,AFCJ,AN0BE,AyBxBC,ATeG,AWG6B,GFpBjC,IzB0BK,CQ3BC,CiBGC,ATeO,CVjBN,CyBkBC,AzBlBA,AN0BA,CG5BC,AH4BA,CyBxBC,CMgBP,ANhBQ,CMgBC,A/BQA,AgBTT,ChBSJ,AgBTqB,CbnBN,AKCb,AiBGa,ATeX,ChBSY,CAAC,AgBTO,CVjB1B,AUiBM,CVjBe,AmBEZ,CzBwBa,AgBTK,CVjB3B,AmBEuB,EMgBjB,C/BQJ,EAA0B,CAAC,EAA3B,EG5BU,AH4BqB,IG5BI,IAAI,IAAI,KAAK,gBAA1C,EAA4D;A4BmBhE,A5BlBM,AKCN,AFEJ,ANyBI,AyBxBA,ATeF,AWGI,InBrBF,AiBGA,ETeI,CAAC,ChBSD,EgBTI,CAAC,ChBSD,CQ3BC,AR2BA,CAAD,AgBTI,ChBSR,AgBTN,CRlBc,AiBGA,GAAG,CzBwBC,IAAI,CAAC,CAAD,CAApB,CQ3BsB,CR2BG,EQ3BzB,AiBG2B,GAAG,sBAAa,KAA3C;AMiBD,A5BpBO,AKCN,AR2BE,AyBxBH,ATeD,AWGG,GINH,MvBfO,AQkBA,CbnBC,AamBA,GhBSG,AgBTA,CAAJ,GAAQ,ChBSX,AgBTG,CbnBU,CAAC,CamBC,CRlBjB,AQkBkB,CRlBC,ELDJ,AamBM,CbnBf,AamBD,CRlBkB,ELDE,AamBA,CAA3B,QRlBqB,CAAgB,KLD7B,IKCa,EAA2B,GAA3B,EAAgC,QAAhC,CAAnB;AuBqBF,A5BrBQ,AKCN,AR2BC,AgBTJ,IRlBG,QLDQ,CKCC,GAAG,CLDC,gBAAL,CAAsB,IAAtB,CAAF,EKCsB,cAA5B;ALAK,AY4CP,AP3CE,AR2BD,AyBzBD,ATiBF,AWCI,EZuBF,IUzCI,CAAC,EtBPC,AKKC,AmBoBA,CFlBC,EVyCR,CAAA,CUzCA,CtBHa,CsBGC,MVyCd,AP3CE,CO2CF,AP3CqB,IAAI,ImBoBL,OnBpBC,AmBoBnB,CnBpBmC,EO2CrC,GAAA,IP3CqB,EAA2B,GAA3B,EAAgC,CO2CrD,OP3CqB,CAAnB;ALAM,AY4CN,AP3CD,AiBEC,AEiB2B,GnBzB7B,CiBQE,MtBHM,CY4CC,KAAK,AUzCA,GtBHG,AsBGA,CtBHC,MAAV,CAAiB,IsBGI,CtBHrB,AY4CN,EZ5C8B,AsBGA,CtBHxB,qBsBGqC,KAA3C;AV0CD,AP1CD,ARyBA,AyBxBC,AEiBG,GZsBJ,AUzCA,KEmBI,C3BOG,AyBxBA,IzBwBP,AyBxBW,CAAC,GAAG,EEiBA,EFjBR,EAAc;AtBHb,AY8CR,AflBD,A6BqBK,AJ7CF,AEgBgB,IFhBhB,KI6CY,K1BjDF,C0BiDR,CAAiB,AJ7CP,GAAG,ItBJI,CAAC,E0BiDlB,EAA6B,E1BjDrB,CsBIiB,GAAG,CtBJC,CAAzB,A0BiDJ,E1BjDgC,A0BiDO,kBAAvC,AJ7CyC,EI6CgB,GJ7C3D;AtBHQ,AGGN,AN0BN,A6BoBE,AJ7CC,AEgBK,ME6BF,EF7BE,CrBjBQ,OAAV,AuB8CJ,AF9BqE,CrBhB/C,AqBkBhB,CE4BU,C1BjDC,CGGb,EAAqB,EHHH,OwBmB+C,EAAjE,CxBnBa,CAAgB,IAAhB,CAAP;A4BqBV,A5BpBS,AGGT,AuB8CE,AF5BE,EIDJ,IzBjBI,EqBkBA,GrBlBK,AuB8CA,CvB9CC,AqBkBF,GIDR,AJCW,CIDX,GzBjBI,AuB8Ca,AF5BF,CrBlBG,AuB+Cb,AF7BW,GrBlBZ,AqBkBO,CrBlBX,AqBkBoB,CIDpB,CAAA,AzBjBwB,CuB8Cf,CACI,KADJ,EACW,IF7Be,CAAC,CIDpC,GAAA,CF8B8B,CAAC,CAAD,CAAV,CAAc,EF7Ba,CAAC,CAAD,CID/B,AJCmB,EE6Bf,AF7BgC,CE6BV,EE9B1C,EAAqB,CJCc,CAAxB,CAAP,WE6BgB,CADX,EAEJ,OAFI,CAEI,KAFJ,EAEW,UAAU,CAAC,CAAD,CAAV,CAAc,OAAd,CAAsB,kBAAtB,CAFX,CAAP;AE5BA,A5BpBK,AGGL,AuBgDD,AJhDD,GI4CA,GJ5CI,EMiBI,CzBjBD,AuBgDA,EE/BI,EzBjBA,CyBiBG,AzBjBF,GAAG,CAAR,AmBAS,CMiBG,CzBjBD,EAAE,CmBAC,EMiBP,AzBjBS,EyBiBrB,CzBjBwB,CAAC,MAAzB,EAAiC,CAAC,GAAG,EAArC,EAAyC,AmBAT,EnBAW,CAA3C,EAA8C,EmBAhD,EAA2C;AMkBzC,A5BpBG,AGGD,AuBgDF,AJhDA,AEiBE,IFjBF,KMiBK,EF+BE,EAAP,AF/BO,CAAC,EFjBI,CEiBD,CAAJ,CFjBQ,CMiBf,AJAc,CIAG,CJAD,EIAI,CAAC,AJAF,QrBjBH,GAAG,AqBiBW,CrBjBV,AqBiBW,CIAd,AzBjBE,CyBiBgB,AzBjBjC,EmBA0B,EEiB1B,CIAe,CAAjB,AJAuC,CAAC,GAAG,EAAzC,EFjBF,AEiB+C,EAAE,CAA/C,EAAkD;AICrD,A5BpBE,AY4CH,AP3CA,AFEG,AuBgDF,AJhDA,AEiBK,EZwBN,AP3CA,CuBgBA,OJGM,EZwBN,AP3CA,CO2CA,AP3CA,CmBmBU,IAAI,IZwBd,AP3CA,AmBmBkB,CZwBlB,AP3CA,AmBmBmB,GAAL,CAAS,anBnBvB,CO2CA,CYxBsC,CnBnBtC,AmBmBuC,CZwBvC,SP3CkB,CO2CC,AYxB+B,CAAC,CnBnBnD,AmBmBkD,CAAZ,CnBnBf,CmBmBgC,GZwBvD,EAA2B,CYxBW,CnBnBtC,AmBmBc,CAAR,CnBnByB;AuBqB/B,A5BrBC,AY4CC,AP3CA,AFED,AuBgDF,AF/BM,GxBrCL,AGgBA,MS6CO,AP3CA,AFEA,gBSyCL,AP3CA,CAAsB,EO2CE,QAAxB,EP3CgC,GAAhC,EAAuC,QAAvC;AO4CD,AP3CA,AFEC,AuBiDJ,AJlDE,ATiBI,GDuBJ,AP3CA,MiBGO,ATiBO,IAAV,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CSjBzB,ATiBI,EAAsB;AbnB5B,AY8CE,AP3CA,AFAgB,AmBAjB,ATiBC,AcfI,AHeA,SxBpBN,AaoBS,AcfO,CdeN,GAAG,CAAC,CbpBd,GaoBkB,CAAC,GAAG,CAAR,CAAZ,GcfI,CAA6B,UAA7B,EAAyC,UAAzC,EAAqD,KAArD,EAA4D,SAA5D,EAAqE;A3BlK3E,AGgKkE,AmBElE,ATgBC,AcfC,AHeG,CxBlLL,CAAqB,A2BmKnB,ExBHgE,GAA9D,KwBGQ,GAAG,GAAG,CAAC,E3BnKnB,CAAA,O2BmKkB,CAAhB;AxBFC,AN0BG,AgBPN,AchBE,MAAI,G9BuBU,UAAV,CAAqB,C8BvBzB,E9BuBI,EAA0B,UAA1B,EAAoC;AMzBzC,AN0BC,A8BvBA,AHcE,M3BSI,A8BvBA,GHcC,G3BSK,A8BvBA,G3BNC,AH6BE,A8BvBA,G9BuBG,CAAC,MAAnB,A8BvByB,CAAC,KHcN,aAAlB,IGda,EAAf;ACgBA,A/BQA,A2BVmC,EIEnC,I/BQM,GAAG,GAAG,G+BRZ,CAAA,C/BQiB,CAAC,GAAG,CAAC,G+BRtB,CAAA,E/BQiB,CAAjB,W+BRA,GAAA,UAAe,KAAf,EAAoB;AAClB,A/BQF,A8BxBA,AHcI,M3BUA,A8BxBA,C9BwBJ,C2BVI,CIEG,GDhBP,EAAY,CxBFC,IqBgBE,CIEb,CAAiB,IAAjB;AACD,AvBnBD,AqBkDI,AC/CF,AHagB,EnBhBlB,CuBiBA,CDdE,KD+CY,GrBlDd,CAAA,EqBkDI,CAAiB,GC/CJ,GtBHjB,AsBGoB,CtBHpB,IqBkDI,CC/CsB,CD+CQ,AC/CP,UAAD,CD+CtB,CC/CmC,CD+CM,CrBlD7C,GAAA,AsBG0B,CAAxB,StBHmB,GAArB,EAA0B,QAA1B,EAAkC;AuBqBlC,AhBuBA,AP3CE,AR0BF,A6BwBA,AFlCM,EZ2BN,IcOI,C7BxBC,CAAC,A2BVA,CnBhBC,ER0BE,CeiBT,AfjBA,A6BwBU,CdPV,CfjBY,CAAC,A6BwBA,CFnC+D,CAEtE,C3BSU,C6BwBhB,GdPA,CAAA,CfjBA,EAAwB,CAAC,CQ1BvB,CAAyB,AR0B3B,EAA6B,A2BX+C,CZ4B5E,CY5BI,EZ4BJ,MP3CqC,GAAnC,CO2CQ,CP3CkC,KO2C5C,EAAgB,CP3Cd;AO4CA,AP3CD,AR0BC,AyBzBE,AKCF,GtBJF,CR4BE,GAAG,CAAC,A8BxBA,CfyCC,AfjBF,AyBzBS,CzByBZ,GAAS,GeiBT,CezCa,EfyCE,CU1Cb,CKCe,ELDM,EV0CvB,KezC0B,KAAK,UAAU,CAAC,QAAX,EAA/B,EAAsD;Af0CtD,AP1CF,ARwBY,A6BwBZ,AJhDA,AKCI,AHcA,M3BSQ,C6BwBP,EdNE,AU1CA,CAAC,AKCE,C9BuBO,A6BwBR,CAAC,C7BxBS,A2BTV,C3BSE,A2BTD,CEiCG,EFjCA,CZ2BX,AU1CK,AEeE,EFfS,AEeF,CZ2BG,CAAC,AY3BF,CGdK,CfyCD,CY3BD,CEiCG,AC/CE,CD+CD,CJhDlB,CV0CoB,CU1CC,CAAC,EIgDhB,GdNS,AcMY,AC/CE,AHcJ,CEiChC,AC/CqC,AHcJ,EEiCI,AJhD9B,CV0C+B,AcMA,CJhDC,CAAC,CEepC,CEiCsC,CAA1C,AFjCyC,CZ2BrB,AY3BsB,CZ2BxC,AcM2C,EAAE,AFjCF,CEiC7C,AJhDO,CAAP,AEeI,CEiC8C,CC/CxB,AHcuB,EGd7C,AHc+C,CAA/C,EAAkD;AZ4BrD,AfnBqB,A6ByBpB,AJhDH,ATiBK,AWFE,GZwBN,GfhBsB,E6ByBhB,Cb/BQ,CWFR,C3BQqB,EAAE,GAAG,AgBN5B,AWFQ,C3BQqB,AgBNX,ChBMU,AgBN5B,Ca+Ba,AFjCF,CEiCG,Ab/BO,Ca+BR,CAAX,IAAkB,Eb/BpB,EAA6B,AWFP,CAAC,CAAD,CAApB,IEiC6B,CAAC,CAAD,CAAjC,EAAsC;AdJxC,AfrBW,A6B0BP,AJ/CN,ATgBE,AcjBI,AHeE,K3BOJ,C6B0BE,Ab/BE,IcjBE,AHeF,EEiCI,Ab/BE,EWFF,CEiCG,Ab/BE,GWFD,CXEK,Ca+Bf,Ab/BgB,EWFF,CXEH,AcjBX,AHee,CXEK,CcjBD,CdiBR,AWFD,CAAS,CXEK,QAAb,CAAf,KWFsC,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,MAAZ,CAAxB,CAAR;A3BQL,A6B0BG,Ab/BJ,AcjBM,QAAA,CdiBC,IAAI,CAAC,KAAL,CAAW,CAAC,EcjBE,CdiBC,EchBb,IdgBF,IAAyB,MAAhC,CchBwB,GAAG,aAAnB,GAAoC,uBAAgB,SAAhB,CADtC;ADiDH,Ab/BJ,AchBM,AHaC,eAAK,CAAC,GAAG,CAAJ,EAAO,EAAE,GAAG,MAAM,CAAC,MAAxB,EAAgC,CAAC,GAAG,EAApC,EAAwC,EAAE,CAA1C,EAA6C;A3BQnD,A6B2BC,Ab9BH,AcjBK,AHaK,E3BOR,GAAG,CAAC,IAAJ,CAAS,C2BPD,IAAI,IAAI,C3BOG,CAAV,EAAa,A2BPF,C3BOX,A2BPY,E3BOE,C2BPP,CAAS,eAAe,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,MAAZ,CAAxB,CAAR;A3BQN,A8BpBD,AHaM,GGtBP,MASO,E9BoBE,UAAU,CAAC,CAAC,CAAC,KAAH,EAAU,CAAC,CAAC,KAAZ,CAAV,IAAgC,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAnD;A+BHF,A/BIC,A6B0BD,AC9CE,AHaG,EIGL,C/BEA,K8BlBQ,CD8CD,IC9CM,ECgBb,AF8BA,CE9BA,ADhBgB,SCgBhB,CAAA,ADhB0B,CAAC,KCgB3B,GAAA,ADhBgB,EAAd,QCgBK,GAAP,EAAU;AACR,AF8BH,IE9BG,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,GAAb;AvBlBF,ARsBA,A6B4BF,AChDI,AHaE,EnBfJ,KRsBK,CAAC,A8BpBC,G9BoBE,CQtBT,ARsBA,CQtBA,AsBEY,C9BoBA,CAAC,E8BpBG,C9BoBA,GAAG,CQtBnB,ARsBoB,CQtBpB,GAAA,ERsBA,CQtBA,CRsB4B,CAAC,C8BpBP,C9BoBtB,EAAiC,IQtB7B,AsBEG,GtBFP,CsBEiC,CtBFxB,AsBEyB,KtBFlC,EAAgB,EsBEV,IAA0C,ItBFhD,EAA0B,GsBE+B,IAAI,eAAM,OAAjE,EAA0E;ACiB1E,AhByBF,AP3CE,ARsBA,A8BpBE,AHaD,EZ4BH,EfrBE,E8BpBE,C9BoBC,C+BJC,AvBlBE,ARsBF,CAAD,CAAH,C+BJA,ChByBF,CgBzBW,AhByBX,AfrBW,CQtBG,ERsBA,CQtBG,ARsBF,CAAD,CAAH,CAAO,C8BpBC,CfyCnB,AP3CsB,CO2CtB,CezCsB,C9BoBpB,IQtBe,KAAiB,AsBE9B,GfyCJ,EP3CuC,CO2CvC,MP3CkC,GAAe,CO2ClC,CP3CE,CAAf,SO2CF,EAA0B;AgBxBtB,AhByBF,AfrBD,A8BpBE,KAFD,If2CK,CgBzBG,CDhBD,OCgBS,GAAG,AhByBnB,GgBzBsB,AhByBF,CgBzBG,UhByBvB,CgBzBmB,EAAjB;AACA,AhByBH,AP5CC,ARuBH,A8BpBK,AHYF,GZ2BF,KP1CM,CmBeC,EIIE,OvBnBP,EAAgB,GuBmBd,CAAkB,IAAlB,CACE,EJLc,kBIKP,CJLX,OIKI,EAAiB,mBAAU,WAA3B,EAAwC,KAAK,eAA7C,EAA8D,IAA9D,CADF;AhB2BJ,AP7CI,ARwBN,AyBtBM,AKCA,AHWqC,MnBdrC,GiBEU,GjBFJ,CAAC,GAAD,CAAN,GAAc,GiBEd,CAAyB,CjBFzB,GiBEA,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,UAAjD,EAA2D;AMmB3D,AvBpBD,AiBEH,ATiBI,AchBA,AHWA,KnBhBF,CiBIE,GTiBU,CeCN,CvBpBC,CmBcC,EXKN,CeCS,AfDO,CSjBpB,ATiBI,ESjBY,ATiBO,IWLH,IXKhB,EAA2B,IeC3B,EAA4B;AAC1B,AvBpBF,AiBEF,ATiBF,AchBI,AHWE,IFZJ,KTiBK,CRnBG,AsBGA,GCiBC,AfDA,CSjBC,ATiBA,CSjBC,CAAD,CAAV,CjBFgB,CQmBX,CSjBW,ATiBA,CRnBG,CsBGD,ELDlB,CMkBI,ADjBiB,CCiBC,CvBpBG,AQmBF,CRnBG,AQmBF,CAAD,CeCnB,CACE,AvBrBmB,AQmBE,CRnBzB,OQmBqB,CAAlB,CAAP,UeEe,CDlBmC,CAC5C,MCiBE,EAAiB,EDlByB,EAE5C,GAAG,CAAC,WCgByB,ADhB1B,CAFyC,CAA9C,QCkBI,EAAuC,KAAK,cAA5C,EAA4D,IAA5D,CADF;AAGD,AvBtBD,AiBEF,ATiBH,AWLS,IFZN,EjBFE,EmBcI,InBdE,CAAC,CiBEC,CAAC,CjBFH,AiBEE,AEWwD,CnBbhE,AiBEF,AEaM,GnBfU,AiBEA,IAAhB,CjBFE,KmBagE,EADhE;AFTF,ATkBJ,AcfM,ILHF,MKGM,ILHI,CAAC,CAAD,CAAV,GAAgB,EKGA,ELHhB,GKGqB,iBAAf,IAAoC,KAAK,KAAK,eAAM,OAAxD,EAAiE;ACiBjE,AvBtBA,AiBGF,AKGI,AHSF,IFZF,MjBHM,CuBsBC,EJPA,CFZG,AEYF,CFZG,CAAD,CAAV,AEYW,CnBfG,AmBeP,EFZS,AEYF,EIOZ,AJPc,CIOG,AvBtBA,CiBGnB,CEYmB,EIOjB,CvBtBA,EAAwB,KmBeG,CAAC,MAA5B,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD;AIQlD,AvBtBG,AiBGJ,AKGI,AHSA,QGTA,EHSA,CFZG,EjBHE,CmBeD,IAAI,CnBfR,CAAY,CiBGhB,EjBHI,AsBMe,EtBNE,AmBeF,CGTG,AHSF,OnBfhB,GsBM4B,AHSF,CAAC,CAAD,CGTK,AHShB,EAAgB,QGTU,CAAC,EHS3B,CAAf,aGT+B,EAA/B;ACiBL,AvBtBI,ARuBD,AyBpBH,AKGI,AHSA,GIPL,ANXA,IKMI,E9BoBU,AyBpBP,IKGI,K9BiBP,CAAoB,GAApB,EAAyB,IAAzB,EAA6B;A+BCjC,AhBqBA,AP5CG,ARuBH,AyBpBE,AKGI,EfsCN,IfrBI,KAAJ,AyBpBS,CVyCT,AUzCU,AKGA,CfsCV,GUzCS,EAAO,EKGE,EfsClB,AUzCS,CVyCT,AetCqB,CLHC,AKId,ILJC,CKII,CLJe,AKId,CAAD,CAAL,ELJC,CAAP,AKIiB,SfqCnB,CerC6B,EfqC7B,CerCgC,CADX,EAEb,KAAK,CfoCS,AepCR,CAAD,CAFQ,EfsCrB,AenCQ,EfmCkB,GenCb,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CAHX,EAIb,KAAK,CAAC,CAAD,CAJQ,EAKb,KAAK,CAAC,CAAD,CALQ,EAMb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CANX,EAOb,KAAK,CAAC,CAAD,CAPQ,EAQb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CARX,CAAf;AfuCJ,AP5CD,ARuBD,AyBpBC,AKYK,AHDF,GnBzBJ,GRkCM,E8BRA,Cf6BC,EfrBI,GAAG,CAAC,C8BRD,E9BQI,CAAC,A8BRF,K9BQF,CAAU,M8BRE,Cf6BzB,Ae7B0B,Gf6BK,AfrBE,EAAV,EeqBvB,AfrBqC,C8BRZ,E9BQF,A8BRa,E9BQI,M8BRf,EAAqB,CAArB,CAArB;Af8BL,AP3CD,ARsBE,AyBpBH,AKYO,AHDH,GZ4BH,CfnBE,KAAK,GAAG,A8BRE,G9BQV,E8BRe,GAAG,yBAAY,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAd;Af+BN,AftBE,AyBnBJ,AKWQ,W9BQG,CAAC,A8BRE,I9BQE,CAAC,C8BRG,C9BQJ,EAAK,A8BRE,G9BQP,EAAU,GAAV,CAAZ,gB8BR+B,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAf;A9BSL,A8BRK,AHFJ,G3BOa,CAAf,I8BLM,eAAe,GAAG,CAAC,KAAK,GAAG,MAAT,IAAmB,CAArC;A9BSN,AgBJI,AcJC,AHHM,S3BWJ,AgBJO,KhBIF,AgBJR,CAAgB,CAAhB,ChBIW,CgBJQ,IhBIX,GAAW,CAAC,AgBJpB,ChBIJ,CgBJ+B;AhBKhC,AgBJC,AWPI,SXOG,IAAI,CAAC,AWPF,IAAI,CXOP,CAAW,GWPR,CAAU,GXOK,CAAC,CAAD,EAAI,QAAJ,CAAlB,CAAP,eWPoD,IAA1C,CAAN;A3BaN,AgBLC,AcLK,AHFD,UGEO,aAAa,GAAG,SAAS,GAC3B,uBAAgB,SAAhB,CAD2B,GAE3B,UAAU,CAAC,gBAAX,EAFJ;ADqCA,Ab9BN,AWpDE,SEkFc,MAAV,CAAiB,UAAjB,EAA6B,KAA7B,EAAkC;AE5BtC,AF6BA,ACnCI,ECMJ,IF6BM,ICnCE,IDmCM,CE7Bd,CAAA,CF6BiB,IAAI,CAAC,CCnCD,ECMrB,AF6BiB,CE7BjB,AF6B0B,ECnCA,GDmCT,CAAjB,KCnCI,EAAiC,MCMrC,GAAA,UAAoB,MAApB,EAA0B;AACxB,AhBsBF,AcOA,AJhDI,AKaE,AHJN,EZgCA,IcOM,ECnCA,CCMC,ANnBO,AESP,GIUL,AhBsBF,CgBtBW,AhBsBX,AYhCA,CEuCc,GAAG,IAAI,CdPrB,AcOsB,CdPtB,Ae5BqB,EDmCJ,CAAS,CCnCD,CLbrB,CAA8B,CMmBhC,CF6Be,CE7Ba,AF6B9B,ME7BE,CNnBE,CKaE,CLbsC,IVyC5C,GAAA,YAAA;AgBrBC,AhBsBC,AP5CF,AqBmDA,AJhDA,AKaK,AHJN,EnBZC,CuBoBA,GF+BM,CAAC,EJhDA,CIgDG,CdPD,CP5CT,CAAA,GO4Cc,IcOM,CAAC,CrBnDrB,AqBmDoB,CrBnDpB,AqBmDU,AJhDW,CAAC,EIgDI,MJhDL,EIgDX,AJhDsB,EjBHhC,CqBmDqC,EdPnC,AP5CF,GiBGqB,EAAqB,CAAC,EIgDI,CAAC,CrBnDlC,AqBmDiC,CAAV,GAAgB,AJhDhC,EjBHrB,AiBGqD,CAAC,CjBHhC,IqBmDtB,GJhDqB,EAA2C,CjBHhE,EAAgC,OiBGX,CAArB;AMqBA,AhBqBC,AP5CC,AqBmDF,AJhDD,AKaI,AHHL,GZ6BE,GcSM,CAAC,ErBnDA,CqBmDG,GrBnDG,GAAX,IAAkB,AqBmDA,CAAC,CAAD,CAAV,GrBnDR,AqBmDwB,ErBnDE,MqBmDlB,GAA2B,UAAU,CAAC,CAAD,CAAV,GAAgB,QAArD;ArBlDI,AqBmDJ,AJ/CF,AKYG,EDmCD,SrBnDS,CqBmDC,CAAC,CrBnDP,AqBmDM,CrBnDG,AqBmDb,GrBnDI,AqBmDY,CAAhB,CrBnDkB,MAAM,CAAC,GAAD,CAApB,EAA2B,UAA3B;AO4CN,AP3CK,AqBmDH,EAAA,OdRF,GcQY,CAAC,CAAD,CAAV,GAAgB,CdRlB,AcQE;AdjOF,AP+KG,ARuBG,A6B4BJ,ACpCA,Cf9LF,EAAA,AP2KE,MR2Bc,A6B4BP,ACpCA,Q9BQH,CAAmB,C6B4BvB,E7B5BI,EAAwB,C8BR5B,O9BQI,EAAkC,UAAlC,EAA4C;AQrBhD,ARsBA,A6B4BD,ACpCA,M9BQO,OAAO,GAAG,QAAQ,IAAI,yBAA5B;AACA,A6B6BF,AbjCM,AcHN,S9BOS,AgBJO,GhBIJ,CAAC,AgBJP,CAAe,CDuBN,ACvBT,EAAkB,ChBIf,CAAU,MgBJb,EAA0B,EhBIH,UAAV,EAAsB,KAAtB,EAA2B;AAC1C,AgBJF,QhBIM,CgBJC,IhBII,AgBJA,CAAC,IhBII,AgBJT,ChBIL,AgBJe,EhBIE,KgBJK,CAAC,CAAD,EAAI,QAAJ,CAAjB,CAAP;AhBKI,AgBJL,ahBIY,IAAP;AACD,AyBrBC,SAAU,4BAAV,CAAuC,UAAvC,EAAmD,UAAnD,EAA6D;AMoBjE,ANnBA,EMmBA,INnBM,CAAC,GAAG,KMmBV,CAAA,INnBoB,CAAC,CAAD,CAApB,EMmBA,CAAA,aAAA,GAAA,UAAc,UAAd,EAAwB;AACtB,A/BCA,AyBpBF,MAAM,CAAC,CzBoBC,C+BDD,CNnBG,CzBoBC,C+BDT,CAAS,C/BCG,MyBpBM,CzBoBC,AyBpBA,CzBoBC,AyBpBF,CMmBlB,ANnBF,EMmBuB,A/BCE,CAAC,KAAK,GAAG,CAAT,CAAJ,EAAiB,E+BDD,Q/BChB,CAAnB,C+BDqB,CAArB;AACD,AvBtBD,ARuBE,AyBpBF,EjBHA,CuBoBA,MNjBO,EzBoBE,CQvBT,CAAA,ARuBW,GAAG,GAAG,CAAN,EQvBX,CAAA,AiBGqB,CzBoBE,AyBpBD,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CzBoBE,AyBpBZ,EAAa,EjBHlC,ARuBqC,GQvBrC,ARuBwC,KAAK,AyBpBxB,CzBoBZ,AyBpBT,CzBoBE,GQvBc,MAAhB,EAAsB;AuBwBtB,AvBvBE,ARuBD,AyBpBF,GzBcQ,CAAP,IQjBM,CAAC,MAAM,CAAC,OAAZ,EAAqB;AACnB,ARuBL,AyBnBD,AEQM,SAAU,MAAV,CAAiB,EAAjB,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,UAAxC,EAAkD;AnBXnD,AsBeC,AHHJ,MAAM,GGGQ,GHHF,GAAG,UAAU,IAAI,IGGzB,CAAmC,SHHvC,EGGI,EAA8C;AAClD,AHHA,EGGA,IHHM,IAAI,GAAG,GGGC,CAAC,WAAD,CAAd,KHHuB,EAAE,CAAC,CAAD,CAAZ,CAAb;AnBZE,AsBgBF,AHHA,EGGA,IHHM,IAAI,GGGC,AHHE,CGGD,OtBhBH,AsBgBT,CAAoB,ItBhBN,MsBgBgB,CtBhBrB,CmBac,EAAE,CAAC,CnBbA,AsBgBN,AHHK,CAAZ,CGGuB,AHHpC,GnBb+B,OAAL,GAAe,EAAhC,CAAP,EAA4C,MAAM,CAAC,OAAnD;AACD,AsBgBC,AHHF,GnBlBA,CsBqBE,EHHI,IAAI,GAAG,EGGA,CAAC,KHHO,EGGnB,CAAoB,AHHE,MAAxB,IGGgC,WAAV,EAAqB;ACO3C,AvBrBA,AsBeI,AHHJ,EISA,IJTM,GAAG,CGGD,EHHI,GISZ,CAAA,ADNc,AHHE,CAAC,IGGE,AHHP,CACV,GIQF,CAAA,AJRM,CAAC,GAAL,CAAS,CGEP,EAA4B,CHF9B,EIQF,EJRmB,CIQnB,GJRuB,CAAC,GAAL,CAAS,EIQhB,EJRO,CAAjB,EIQF,CJPI,CIOa,GJPT,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,CAAjB,GAAkC,IAAI,CAAC,GAAL,CAAS,OAAT,CAF1B,CAAZ;AIUE,ADNI,AHAN,MAAM,EIMA,CJNG,GIMC,AJLR,GIKW,CJLP,GACJ,CIIgB,GJJZ,CAAC,KGFgB,AHErB,CACE,EIGF,EJHM,CGHF,AHGG,EGHsB,CHG3B,CAAS,OAAT,EGHE,EAAsC,AHGpB,IAAI,CAAC,GAAL,CAAS,IAAT,CGHlB,AHGF,GAAqC,IAAI,CAAC,GAAL,CAAS,IAAT,CADvC,EAEE,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,GAAT,CAFpC,CAFF;AFZI,AKaC,AHKL,SFlBc,AEkBP,CAAC,qBAAU,GAAV,CAAD,EAAiB,CFlBpB,CAAwC,WAAxC,EAAqD,MEkBvB,GAAV,CFlBpB,AEkBG,CAAP,CFlBmE;AMmBjE,ANlBF,AKaG,AHKJ,KGTG,CLTI,EMkBA,INlBM,CMkBD,ENlBI,EMkBA,KAAK,YNlBc,CAAC,CMkBjC,EAAkC,ONlBF,CAAlC;AMmBI,ANlBJ,AKaC,GAND,MLPO,CMkBC,CAAC,KAAK,UAAV,ANlBoB,CAAC,CMkBC,KNlBF,EAAS,WAAT,CAAxB;AMmBM,ANlBP,AKaA,YCKa,UAAU,GAAG,KAAK,aAAL,EAAnB;AFgCF,AJhDN,AKaA,SDmCgB,KAAV,CAAgB,UAAhB,EAA4B,KAA5B,EAAiC;AE/B/B,AFgCN,EAAA,UEhCU,AFgCA,CAAC,CAAD,CAAV,IAAiB,GEhCX,EAAgB,AFgCtB;AE/BQ,AvBrBR,AqBqDA,ErBrDA,AqBqDA,UrBrDA,AqBqDU,CrBrDV,AqBqDW,CAAD,CEhCG,AFgCb,IAAiB,GrBrDjB,CAAA,CqBqDA,CEhCQ,GAAkB,AvBrB1B,GAAA,UAAM,GAAN,EAAW,UAAX,EAAqB,SuBsBX,KAAK,cADW,EAEhB,UAFgB,CAAlB;AAID,AvBxBL,AqBqDF,QrBrDM,CuBmBA,AFkCC,IrBrDI,EuBwBE,IF6Bb,CrBrDM,IAAgB,GAAG,IAAI,KAAK,OAAhC,EAAyC;AuByBnC,AvBxBJ,AqBqDL,UrBrDW,KuBwBG,GvBxBK,GAAG,IuBwBb,CvBxBkB,EuBwBA,KvBxBL,CAAa,GAAb,CAAjB,auBwBI;AACD,AvBxBH,AqBsDN,arBtDa,KAAK,OAAL,CAAa,GAAb,CAAP;AuByBC;AvBxBD,UAAI,kBAAQ,KAAK,OAAb,CAAJ,EAA2B;AuByB3B,AvBxBE,UuBwBI,GAAG,AvBxBF,GuBwBK,IvBxBV,CuBwBe,EvBxBA,IuBwBL,AvBxBV,EuBwBF;AACA,AvBxBC,UuBwBK,UAAU,GAAG,GAAG,CAAC,8BAAJ,CAAmC,KAAnC,CAAnB;ANnBA,SAAU,iCAAV,CACJ,eADI,EAEJ,MAFI,EAGJ,GAHI,EAIJ,MAJI,EAKJ,UALI,EAKM;AMeN,AvBxBA,AiBWJ,MAAM,IMaE,AvBxBA,CAAC,CiBWG,GAAG,KMaX,CvBxBA,CuBwBgB,CvBxBC,WiBWa,CAAC,UAAD,CAAlC;AMcM,AvBxBA,AqBsDF,AJ3CJ,SI2Cc,AJ3CP,GMaK,CvBxBD,MAAL,CAAY,GAAZ,CqBsDF,CrBtDmB,AqBsDO,CE9BJ,GAAG,CNbD,CI2CxB,AJ3CyB,EjBXvB,AqBsDgC,IJ3CV,EI2CxB,AJ3CiC,EI2CO,aJ3ChB,EAA0B,GMahD,GNbsB,EAAkC,GAAlC,EAAuC,MAAvC,CAA5B;AjBVK,AqBsDL,AJ3CD,MI2CO,EAAE,GAAG,MAAM,CAAC,CAAD,CAAN,GAAY,MAAM,CAAC,CAAD,CAA7B;AE9BM,AvBvBH,AqBsDH,AJ1CF,MI0CQ,EAAE,GAAG,CE/BD,KF+BO,CAAC,CAAD,CAAN,GAAY,GE/BjB,EAAoB,CF+BG,CAAC,CAAD,CAA7B;AE9BQ,AvBvBP,AqBsDD,ACpCI,GtB7BJ,MqBiEO,ACpCO,EDoCL,GAAG,CE/BC,CF+BN,GAAU,EAAE,GAAG,CE/Bd,CF+BR,EE/B0B,IDLtB,CACJ,YADI,EAEJ,YAFI,EAGJ,MCGU,KAAK,KDNX,EAIJ,OCC0B,EAEhB,ODPN,EAIY,KCCU,CAAlB;AAID,AF4BR,AC/BC,EAAA,YAAY,CAAC,OAAb,CAAqB,UAAU,WAAV,EAAqB;AtBvB5C,AqBwDA,AChCI,IAAA,KtBxBJ,OsBwBgB,CAAC,EtBxBjB,KsBwBI,CAAqB,UAAU,WAAV,EAAqB;ACGtC,AvBpMR,AsBkMM,CtBlMN,CAAyB,WuBoMZ,QvBpMb,CAAA,CuB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","file":"Coordinates.a53ab7d7.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","import MousePosition from \"ol/control/MousePosition\";\r\nimport { createStringXY } from \"ol/coordinate\";\r\n\r\nconst map=$('#map').data('map');\r\n\r\nconst mousePOsition=new MousePosition({\r\n    coordinateFormat:createStringXY(2),\r\n    className:\"badge badge-pill badge-warning\",\r\n    target:\"coordinates\"\r\n})\r\n\r\nmap.addControl(mousePOsition);"]}